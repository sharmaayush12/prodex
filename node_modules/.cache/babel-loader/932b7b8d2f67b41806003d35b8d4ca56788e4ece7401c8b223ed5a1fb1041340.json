{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"D:/WFA/testing/latest/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"D:/WFA/testing/latest/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"D:/WFA/testing/latest/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"D:/WFA/testing/latest/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es.parse-float.js\");\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n// Aliases\nvar abs = Math.abs;\nvar float = parseFloat; // Values\n\nvar MIN = 'min';\nvar MAX = 'max';\nvar ANY = 'any';\nvar VERTICAL = 'vertical';\nvar TABINDEX = 'tabindex'; // Data Attributes\n\nvar DATA_LOWER = 'data-lower';\nvar DATA_UPPER = 'data-upper';\nvar DATA_ACTIVE = 'data-active';\nvar DATA_VERTICAL = 'data-vertical';\nvar DATA_DISABLED = 'data-disabled';\nvar RangeSlider = /*#__PURE__*/function (_react$PureComponent) {\n  _inherits(RangeSlider, _react$PureComponent);\n  var _super = _createSuper(RangeSlider);\n  function RangeSlider() {\n    var _this;\n    _classCallCheck(this, RangeSlider);\n    _this = _super.call(this);\n    _this.element = /*#__PURE__*/(0, _react.createRef)();\n    _this.input = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    _this.thumb = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    _this.range = /*#__PURE__*/(0, _react.createRef)();\n    _this.options = {};\n    _this.firstCall = true;\n    _this.isControlled = false;\n    _this.externalInput = false;\n    _this.isComponentMounted = false;\n    _this.lastValueProp = [];\n    return _this;\n  }\n  _createClass(RangeSlider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      if (!this.isComponentMounted) {\n        this.value = this.setMinMaxProps(); // Thumb indexes for min and max values\n        // (swapped when the thumbs cross each other)\n\n        this.index = this.setMinMaxProps(0, 1); // Thumb width & height for calculation of exact positions and sizes of horizontal thumbs and range\n\n        this.thumbWidth = this.setMinMaxProps();\n        this.thumbHeight = this.setMinMaxProps(); // Slidable range limits (when a thumb is dragged)\n\n        this.rangeLimits = this.setMinMaxProps(); // Slider value depending on the user interaction\n\n        this.sliderValue = this.setMinMaxProps(); // For dragging thumbs and range\n\n        this.maxRangeWidth = 0;\n        this.rangeWidth = 0;\n        this.isDragging = false;\n        this.thumbDrag = false;\n        this.startPos = 0; // initial\n\n        this.reset(); // Add listeners to element\n\n        this.addNodeEventListener(this.element.current, 'pointerdown', function (e) {\n          _this2.elementFocused(e);\n        }); // Add listeners to thumbs and set [data-disabled] on disabled thumbs\n\n        this.thumb.forEach(function (t, i) {\n          _this2.addNodeEventListener(t.current, 'pointerdown', function (e) {\n            _this2.initiateThumbDrag(e, i, t.current);\n          });\n          _this2.addNodeEventListener(t.current, 'keydown', function (e) {\n            if (e.which >= 37 && e.which <= 40) {\n              e.preventDefault();\n              _this2.stepValue(i, e.which);\n            }\n          });\n        }); // Add listeners to range\n\n        this.addNodeEventListener(this.range.current, 'pointerdown', function (e) {\n          _this2.initiateRangeDrag(e);\n        }); // Define and add global listeners\n\n        this.pointerMoveEvent = function (e) {\n          _this2.drag(e);\n        };\n        this.pointerUpEvent = function () {\n          if (_this2.isDragging) {\n            _this2.removeNodeAttribute(_this2.thumb[0].current, DATA_ACTIVE);\n            _this2.removeNodeAttribute(_this2.thumb[1].current, DATA_ACTIVE);\n            _this2.removeNodeAttribute(_this2.range.current, DATA_ACTIVE);\n            _this2.isDragging = false;\n            if (_this2.thumbDrag) {\n              if (_this2.options.onThumbDragEnd) {\n                _this2.options.onThumbDragEnd();\n              }\n            } else {\n              if (_this2.options.onRangeDragEnd) {\n                _this2.options.onRangeDragEnd();\n              }\n            }\n          }\n        };\n        this.resizeEvent = function () {\n          _this2.syncThumbDimensions();\n          _this2.updateThumbs();\n          _this2.updateRange();\n        };\n        this.addNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n        this.addNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n        this.addNodeEventListener(window, 'resize', this.resizeEvent);\n        this.isComponentMounted = true;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.reset();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Remove global listeners\n      this.removeNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n      this.removeNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n      this.removeNodeEventListener(window, 'resize', this.resizeEvent);\n      this.isComponentMounted = false;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.isControlled = !!this.props.value;\n      if (this.isControlled) {\n        if (this.firstCall || this.props.value !== this.lastValueProp) {\n          this.firstCall = false;\n          this.externalInput = true;\n        }\n        this.lastValueProp = this.props.value;\n      }\n      this.maxRangeWidth = this.options.max - this.options.min;\n      this.updateOrientation();\n      this.setValue('', true, false);\n      this.updateRangeLimits();\n      this.updateDisabledState();\n      this.updateThumbsDisabledState();\n      this.updateTabIndexes();\n    }\n  }, {\n    key: \"isNumber\",\n    value: function isNumber(n) {\n      // check for NaN explicitly\n      // because with NaN, the second exp. evaluates to true\n      return !isNaN(n) && +n + '' === n + '';\n    }\n  }, {\n    key: \"setMinMaxProps\",\n    value: function setMinMaxProps() {\n      var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"iterateMinMaxProps\",\n    value: function iterateMinMaxProps(fn) {\n      [MIN, MAX].forEach(fn);\n    }\n  }, {\n    key: \"getSetProps\",\n    value: function getSetProps(condition, expression, fn) {\n      if (condition) {\n        return expression;\n      } else {\n        fn();\n      }\n    }\n  }, {\n    key: \"setNodeAttribute\",\n    value: function setNodeAttribute(node, attribute) {\n      var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      node.setAttribute(attribute, value);\n    }\n  }, {\n    key: \"removeNodeAttribute\",\n    value: function removeNodeAttribute(node, attribute) {\n      node.removeAttribute(attribute);\n    }\n  }, {\n    key: \"addNodeEventListener\",\n    value: function addNodeEventListener(node, event, fn) {\n      var isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      // with options for pointer events\n      node.addEventListener(event, fn, isPointerEvent ? {\n        passive: false,\n        capture: true\n      } : {});\n    }\n  }, {\n    key: \"removeNodeEventListener\",\n    value: function removeNodeEventListener(node, event, fn) {\n      var isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      // with options for pointer events\n      node.removeEventListener(event, fn, isPointerEvent ? {\n        passive: false,\n        capture: true\n      } : {});\n    }\n  }, {\n    key: \"fallbackToDefault\",\n    value: function fallbackToDefault(property, defaultValue) {\n      this.options[property] = this.props[property] ? this.props[property] : defaultValue;\n    }\n  }, {\n    key: \"ifVerticalElse\",\n    value: function ifVerticalElse(vertical, horizontal) {\n      return this.options.orientation === VERTICAL ? vertical : horizontal;\n    }\n  }, {\n    key: \"currentIndex\",\n    value: function currentIndex(i) {\n      return i === 1 ? this.index.max : this.index.min;\n    } // Set min and max values to 1 (arbitrarily) if any of the min or max values are \"invalid\"\n    // Setting both values 1 will disable the slider\n    // Called when,\n    // -> the element is initially set\n    // -> min or max properties are modified\n  }, {\n    key: \"safeMinMaxValues\",\n    value: function safeMinMaxValues() {\n      var error = false;\n      if (!this.isNumber(this.options.min) || !this.isNumber(this.options.max)) {\n        error = true;\n      }\n      this.options.min = error ? 1 : +this.options.min;\n      this.options.max = error ? 1 : +this.options.max;\n    } // Reframe the thumbsDisabled value if \"invalid\"\n    // Called when,\n    // -> the element is initially set\n    // -> thumbsDisabled property is modified\n  }, {\n    key: \"safeThumbsDisabledValues\",\n    value: function safeThumbsDisabledValues() {\n      if (this.options.thumbsDisabled instanceof Array) {\n        if (this.options.thumbsDisabled.length === 1) {\n          this.options.thumbsDisabled.push(false);\n        }\n        if (this.options.thumbsDisabled.length !== 1 && this.options.thumbsDisabled.length !== 2) {\n          this.options.thumbsDisabled = [false, false];\n        }\n      } else {\n        this.options.thumbsDisabled = [this.options.thumbsDisabled, this.options.thumbsDisabled];\n      } // Boolean Values\n\n      this.options.thumbsDisabled[0] = !!this.options.thumbsDisabled[0];\n      this.options.thumbsDisabled[1] = !!this.options.thumbsDisabled[1];\n    } // Called when,\n    // -> the element is initially set\n    // -> min, max, step or value properties are modified\n    // -> thumbs are dragged\n    // -> element is clicked upon\n    // -> an arrow key is pressed\n  }, {\n    key: \"setValue\",\n    value: function setValue(newValue) {\n      var forceSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      // Current value as set in the input elements\n      // which could change while changing min, max and step values\n      var currentValue = this.setMinMaxProps(this.input[0].current.value, this.input[1].current.value); // var value is synced with the values set in the input elements if no newValue is passed\n\n      newValue = newValue || currentValue;\n      this.input[this.index.min].current.value = newValue.min;\n      this.input[this.index.max].current.value = this.thumbDrag || forceSet ? newValue.max : newValue.min + this.rangeWidth;\n      this.syncValues(); // Check if the thumbs cross each other\n\n      if (this.value.min > this.value.max) {\n        // Switch thumb indexes\n        this.index.min = +!this.index.min;\n        this.index.max = +!this.index.max; // Switch thumb attributes\n\n        this.removeNodeAttribute(this.thumb[this.index.min].current, DATA_UPPER);\n        this.removeNodeAttribute(this.thumb[this.index.max].current, DATA_LOWER);\n        this.setNodeAttribute(this.thumb[this.index.min].current, DATA_LOWER);\n        this.setNodeAttribute(this.thumb[this.index.max].current, DATA_UPPER); // Switch thumb drag labels\n\n        if (this.thumbDrag) {\n          this.thumbDrag = this.thumbDrag === MIN ? MAX : MIN;\n        }\n        this.syncValues();\n      }\n      this.sliderValue = forceSet ? this.value : newValue;\n      var valueSet = false;\n      if (currentValue.min !== this.input[0].current.value || forceSet) {\n        valueSet = true;\n      }\n      if (currentValue.max !== this.input[1].current.value || forceSet) {\n        valueSet = true;\n      } // Update the positions, dimensions and aria attributes everytime a value is set\n      // and call the onInput function from options (if set)\n\n      if (valueSet) {\n        if (callback && this.options.onInput) {\n          this.options.onInput([this.value.min, this.value.max]);\n        }\n        if (!this.isControlled || this.externalInput) {\n          this.externalInput = false;\n          this.syncThumbDimensions();\n          this.updateThumbs();\n          this.updateRange();\n          this.updateAriaValueAttributes();\n        }\n      }\n    } // Sync var value with the input elements\n  }, {\n    key: \"syncValues\",\n    value: function syncValues() {\n      var _this3 = this;\n      this.iterateMinMaxProps(function (_) {\n        _this3.value[_] = +_this3.input[_this3.index[_]].current.value;\n      });\n    } // Called when,\n    // -> setValue is called and a value is set\n    // -> window is resized\n  }, {\n    key: \"updateThumbs\",\n    value: function updateThumbs() {\n      var _this4 = this;\n      this.iterateMinMaxProps(function (_) {\n        _this4.thumb[_this4.index[_]].current.style[_this4.ifVerticalElse('top', 'left')] = \"calc(\".concat((_this4.value[_] - _this4.options.min) / _this4.maxRangeWidth * 100, \"% + \").concat((0.5 - (_this4.value[_] - _this4.options.min) / _this4.maxRangeWidth) * _this4.ifVerticalElse(_this4.thumbHeight, _this4.thumbWidth)[_], \"px)\");\n      });\n    } // Called when,\n    // -> setValue is called and a value is set\n    // -> window is resized\n  }, {\n    key: \"updateRange\",\n    value: function updateRange() {\n      var elementBounds = this.element.current.getBoundingClientRect();\n      var deltaOffset = (0.5 - (this.value.min - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).min / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n      var deltaDimension = (0.5 - (this.value.max - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).max / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n      this.range.current.style[this.ifVerticalElse('top', 'left')] = \"\".concat(((this.value.min - this.options.min) / this.maxRangeWidth + deltaOffset) * 100, \"%\");\n      this.range.current.style[this.ifVerticalElse('height', 'width')] = \"\".concat(((this.value.max - this.options.min) / this.maxRangeWidth - (this.value.min - this.options.min) / this.maxRangeWidth - deltaOffset + deltaDimension) * 100, \"%\");\n    }\n  }, {\n    key: \"updateRangeLimits\",\n    value: function updateRangeLimits() {\n      var _this5 = this;\n      this.iterateMinMaxProps(function (_, i) {\n        _this5.rangeLimits[_] = _this5.options.thumbsDisabled[i] ? _this5.value[_] : _this5.options[_];\n      });\n    } // Called when,\n    // -> thumbs are initially set\n    // -> thumbs are disabled / enabled\n  }, {\n    key: \"updateTabIndexes\",\n    value: function updateTabIndexes() {\n      var _this6 = this;\n      this.iterateMinMaxProps(function (_, i) {\n        if (!_this6.options.disabled && !_this6.options.thumbsDisabled[i]) {\n          _this6.setNodeAttribute(_this6.thumb[_this6.currentIndex(i)].current, TABINDEX, 0);\n        } else {\n          _this6.removeNodeAttribute(_this6.thumb[_this6.currentIndex(i)].current, TABINDEX);\n        }\n      });\n    } // Called when,\n    // -> setValue is called and a value is set\n  }, {\n    key: \"updateAriaValueAttributes\",\n    value: function updateAriaValueAttributes() {\n      var _this7 = this;\n      this.iterateMinMaxProps(function (_) {\n        _this7.setNodeAttribute(_this7.thumb[_this7.index[_]].current, 'aria-valuemin', _this7.options.min);\n        _this7.setNodeAttribute(_this7.thumb[_this7.index[_]].current, 'aria-valuemax', _this7.options.max);\n        _this7.setNodeAttribute(_this7.thumb[_this7.index[_]].current, 'aria-valuenow', _this7.value[_]);\n        _this7.setNodeAttribute(_this7.thumb[_this7.index[_]].current, 'aria-valuetext', _this7.value[_]);\n      });\n    } // Called when,\n    // -> disabled property is modified\n  }, {\n    key: \"updateDisabledState\",\n    value: function updateDisabledState() {\n      if (this.options.disabled) {\n        this.setNodeAttribute(this.element.current, DATA_DISABLED);\n      } else {\n        this.removeNodeAttribute(this.element.current, DATA_DISABLED);\n      }\n    } // Called when,\n    // -> thumbsDisabled property is modified\n  }, {\n    key: \"updateThumbsDisabledState\",\n    value: function updateThumbsDisabledState() {\n      var _this8 = this;\n      this.options.thumbsDisabled.forEach(function (d, i) {\n        var currIndex = _this8.currentIndex(i);\n        if (d) {\n          _this8.setNodeAttribute(_this8.thumb[currIndex].current, DATA_DISABLED);\n          _this8.setNodeAttribute(_this8.thumb[currIndex].current, 'aria-disabled', true);\n        } else {\n          _this8.removeNodeAttribute(_this8.thumb[currIndex].current, DATA_DISABLED);\n          _this8.setNodeAttribute(_this8.thumb[currIndex].current, 'aria-disabled', false);\n        }\n      });\n    } // Called when,\n    // -> min or max values are modified\n  }, {\n    key: \"updateLimits\",\n    value: function updateLimits(limit) {\n      var _this9 = this;\n      var m = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.options[limit] = m;\n      this.safeMinMaxValues();\n      this.iterateMinMaxProps(function (_) {\n        _this9.input[0].current[_] = _this9.options[_];\n        _this9.input[1].current[_] = _this9.options[_];\n      });\n      this.maxRangeWidth = this.options.max - this.options.min;\n      this.setValue('', true);\n      this.updateRangeLimits();\n    } // Called when,\n    // -> the element is initially set\n    // -> orientation property is modified\n  }, {\n    key: \"updateOrientation\",\n    value: function updateOrientation() {\n      if (this.options.orientation === VERTICAL) {\n        this.setNodeAttribute(this.element.current, DATA_VERTICAL);\n      } else {\n        this.removeNodeAttribute(this.element.current, DATA_VERTICAL);\n      }\n      this.range.current.style[this.ifVerticalElse('left', 'top')] = '';\n      this.range.current.style[this.ifVerticalElse('width', 'height')] = '';\n      this.thumb[0].current.style[this.ifVerticalElse('left', 'top')] = '';\n      this.thumb[1].current.style[this.ifVerticalElse('left', 'top')] = '';\n    } // thumb width & height values are to be synced with the CSS values for correct calculation of\n    // thumb position and range width & position\n    // Called when,\n    // -> setValue is called and a value is set (called before updateThumbs() and updateRange())\n    // -> thumb / range drag is initiated\n    // -> window is resized\n  }, {\n    key: \"syncThumbDimensions\",\n    value: function syncThumbDimensions() {\n      var _this10 = this;\n      this.iterateMinMaxProps(function (_) {\n        _this10.thumbWidth[_] = float(window.getComputedStyle(_this10.thumb[_this10.index[_]].current).width);\n        _this10.thumbHeight[_] = float(window.getComputedStyle(_this10.thumb[_this10.index[_]].current).height);\n      });\n    } // thumb position calculation depending upon the pointer position\n  }, {\n    key: \"currentPosition\",\n    value: function currentPosition(e, node) {\n      var elementBounds = this.element.current.getBoundingClientRect();\n      var nodeBounds = node.getBoundingClientRect();\n      var currPos = (this.ifVerticalElse(nodeBounds.top - elementBounds.top, nodeBounds.left - elementBounds.left) + (e[\"client\".concat(this.ifVerticalElse('Y', 'X'))] - node.getBoundingClientRect()[this.ifVerticalElse('top', 'left')]) - (this.thumbDrag ? (0.5 - (this.value[this.thumbDrag] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[this.thumbDrag] : 0)) / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left) * this.maxRangeWidth + this.options.min;\n      if (currPos < this.options.min) {\n        return this.options.min;\n      }\n      if (currPos > this.options.max) {\n        return this.options.max;\n      }\n      return currPos;\n    }\n  }, {\n    key: \"doesntHaveClassName\",\n    value: function doesntHaveClassName(e, className) {\n      return !e.target.classList.contains(className);\n    }\n  }, {\n    key: \"elementFocused\",\n    value: function elementFocused(e) {\n      var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var setFocus = false;\n      if (!this.options.disabled && (this.doesntHaveClassName(e, 'range-slider__thumb') && this.doesntHaveClassName(e, 'range-slider__range') || this.options.rangeSlideDisabled && this.doesntHaveClassName(e, 'range-slider__thumb'))) {\n        setFocus = true;\n      } // No action if both thumbs are disabled\n\n      if (setFocus && this.options.thumbsDisabled[0] && this.options.thumbsDisabled[1]) {\n        setFocus = false;\n      }\n      if (setFocus) {\n        var currPos = this.currentPosition(e, this.range.current);\n        var deltaMin = abs(this.value.min - currPos);\n        var deltaMax = abs(this.value.max - currPos);\n        if (this.options.thumbsDisabled[0]) {\n          if (currPos >= this.value.min) {\n            this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n            this.initiateThumbDrag(e, this.index.max, this.thumb[this.index.max].current, !repeat);\n          }\n        } else if (this.options.thumbsDisabled[1]) {\n          if (currPos <= this.value.max) {\n            this.setValue(this.setMinMaxProps(currPos, this.value.max), true, !repeat);\n            this.initiateThumbDrag(e, this.index.min, this.thumb[this.index.min].current, !repeat);\n          }\n        } else {\n          var nearestThumbIndex = this.index.max;\n          if (deltaMin === deltaMax) {\n            this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n          } else {\n            this.setValue(this.setMinMaxProps(deltaMin < deltaMax ? currPos : this.value.min, deltaMax < deltaMin ? currPos : this.value.max), true, !repeat);\n            nearestThumbIndex = deltaMin < deltaMax ? this.index.min : this.index.max;\n          }\n          this.initiateThumbDrag(e, nearestThumbIndex, this.thumb[nearestThumbIndex].current, !repeat);\n        }\n        if (repeat) {\n          this.elementFocused(e, false);\n        }\n      }\n    }\n  }, {\n    key: \"initiateDrag\",\n    value: function initiateDrag(e, node) {\n      this.syncThumbDimensions();\n      this.setNodeAttribute(node, DATA_ACTIVE);\n      this.startPos = this.currentPosition(e, node);\n      this.isDragging = true;\n    }\n  }, {\n    key: \"initiateThumbDrag\",\n    value: function initiateThumbDrag(e, i, node) {\n      var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n        this.initiateDrag(e, node);\n        this.thumbDrag = this.index.min === i ? MIN : MAX;\n        if (callback && this.options.onThumbDragStart) {\n          this.options.onThumbDragStart();\n        }\n      }\n    }\n  }, {\n    key: \"initiateRangeDrag\",\n    value: function initiateRangeDrag(e) {\n      if (!this.options.disabled && !this.options.rangeSlideDisabled) {\n        this.initiateDrag(e, this.range.current);\n        this.rangeWidth = this.value.max - this.value.min;\n        this.thumbDrag = false;\n        if (this.options.onRangeDragStart) {\n          this.options.onRangeDragStart();\n        }\n      }\n    }\n  }, {\n    key: \"drag\",\n    value: function drag(e) {\n      if (this.isDragging) {\n        var lastPos = this.currentPosition(e, this.range.current);\n        var delta = lastPos - this.startPos;\n        var min = this.value.min;\n        var max = this.value.max;\n        var lower = this.thumbDrag ? this.rangeLimits.min : this.options.min;\n        var upper = this.thumbDrag ? this.rangeLimits.max : this.options.max;\n        if (!this.thumbDrag || this.thumbDrag === MIN) {\n          min = this.thumbDrag ? lastPos : this.sliderValue.min + delta;\n        }\n        if (!this.thumbDrag || this.thumbDrag === MAX) {\n          max = this.thumbDrag ? lastPos : this.sliderValue.max + delta;\n        }\n        if (min >= lower && min <= upper && max >= lower && max <= upper) {\n          this.setValue({\n            min: min,\n            max: max\n          });\n          this.startPos = lastPos;\n        } else {\n          // When min thumb reaches upper limit\n          if (min > upper && this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(upper, upper));\n            this.startPos = lastPos;\n          } // When max thumb reaches lower limit\n\n          if (max < lower && this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(lower, lower));\n            this.startPos = lastPos;\n          } // When range / min thumb reaches lower limit\n\n          if (min < lower) {\n            if (!this.thumbDrag) {\n              this.setValue(this.setMinMaxProps(lower, this.value.max - this.value.min + lower));\n            } else {\n              this.setValue(this.setMinMaxProps(lower, this.value.max));\n            }\n            this.startPos = lastPos;\n          } // When range / max thumb reaches upper limit\n\n          if (max > upper) {\n            if (!this.thumbDrag) {\n              this.setValue(this.setMinMaxProps(this.value.min - this.value.max + upper, upper));\n            } else {\n              this.setValue(this.setMinMaxProps(this.value.min, upper));\n            }\n            this.startPos = lastPos;\n          }\n        }\n        if (!this.thumbDrag) {\n          this.updateRangeLimits();\n        }\n      }\n    }\n  }, {\n    key: \"actualStepValue\",\n    value: function actualStepValue() {\n      var step = float(this.input[0].current.step);\n      return this.input[0].current.step === ANY ? ANY : step === 0 || isNaN(step) ? 1 : step;\n    } // Step value (up or down) using arrow keys\n  }, {\n    key: \"stepValue\",\n    value: function stepValue(i, key) {\n      var direction = (key === 37 || key === 40 ? -1 : 1) * this.ifVerticalElse(-1, 1);\n      if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n        var step = this.actualStepValue();\n        step = step === ANY ? 1 : step;\n        var min = this.value.min + step * (this.index.min === i ? direction : 0);\n        var max = this.value.max + step * (this.index.max === i ? direction : 0); // When min thumb reaches upper limit\n\n        if (min > this.rangeLimits.max) {\n          min = this.rangeLimits.max;\n        } // When max thumb reaches lower limit\n\n        if (max < this.rangeLimits.min) {\n          max = this.rangeLimits.min;\n        }\n        this.setValue({\n          min: min,\n          max: max\n        }, true);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Set options to default values if not set\n      this.fallbackToDefault('rangeSlideDisabled', false);\n      this.fallbackToDefault('thumbsDisabled', [false, false]);\n      this.fallbackToDefault('orientation', 'horizontal');\n      this.fallbackToDefault('defaultValue', [25, 75]);\n      this.fallbackToDefault('disabled', false);\n      this.fallbackToDefault('onThumbDragStart', false);\n      this.fallbackToDefault('onRangeDragStart', false);\n      this.fallbackToDefault('onThumbDragEnd', false);\n      this.fallbackToDefault('onRangeDragEnd', false);\n      this.fallbackToDefault('onInput', false);\n      this.fallbackToDefault('step', 1);\n      this.fallbackToDefault('min', 0);\n      this.fallbackToDefault('max', 100);\n      if (this.props.value) {\n        this.fallbackToDefault('value', [25, 75]);\n      }\n      this.safeMinMaxValues();\n      this.safeThumbsDisabledValues();\n      return /*#__PURE__*/_react.default.createElement(\"div\", {\n        \"data-testid\": \"element\",\n        id: this.props.id,\n        ref: this.element,\n        className: (0, _clsx.default)('range-slider', this.props.className)\n      }, /*#__PURE__*/_react.default.createElement(\"input\", {\n        ref: this.input[0],\n        type: \"range\",\n        min: this.options.min,\n        max: this.options.max,\n        step: this.options.step,\n        value: this.props.value ? this.options.value[0] : this.isComponentMounted ? this.value.min : this.options.defaultValue[0],\n        onChange: function onChange() {},\n        disabled: true\n      }), /*#__PURE__*/_react.default.createElement(\"input\", {\n        ref: this.input[1],\n        type: \"range\",\n        min: this.options.min,\n        max: this.options.max,\n        step: this.options.step,\n        value: this.props.value ? this.options.value[1] : this.isComponentMounted ? this.value.max : this.options.defaultValue[1],\n        onChange: function onChange() {},\n        disabled: true\n      }), /*#__PURE__*/_react.default.createElement(\"div\", {\n        ref: this.thumb[0],\n        role: \"slider\",\n        className: \"range-slider__thumb\",\n        \"data-lower\": true\n      }), /*#__PURE__*/_react.default.createElement(\"div\", {\n        ref: this.thumb[1],\n        role: \"slider\",\n        className: \"range-slider__thumb\",\n        \"data-upper\": true\n      }), /*#__PURE__*/_react.default.createElement(\"div\", {\n        ref: this.range,\n        className: \"range-slider__range\"\n      }));\n    }\n  }]);\n  return RangeSlider;\n}(_react.PureComponent);\n;\nvar _default = RangeSlider;\nexports.default = _default;","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","_inherits","_createSuper","Object","defineProperty","exports","value","_react","_interopRequireWildcard","_clsx","_interopRequireDefault","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","abs","Math","float","parseFloat","MIN","MAX","ANY","VERTICAL","TABINDEX","DATA_LOWER","DATA_UPPER","DATA_ACTIVE","DATA_VERTICAL","DATA_DISABLED","RangeSlider","_react$PureComponent","_super","_this","element","createRef","input","thumb","range","options","firstCall","isControlled","externalInput","isComponentMounted","lastValueProp","componentDidMount","_this2","setMinMaxProps","index","thumbWidth","thumbHeight","rangeLimits","sliderValue","maxRangeWidth","rangeWidth","isDragging","thumbDrag","startPos","reset","addNodeEventListener","current","e","elementFocused","forEach","t","i","initiateThumbDrag","which","preventDefault","stepValue","initiateRangeDrag","pointerMoveEvent","drag","pointerUpEvent","removeNodeAttribute","onThumbDragEnd","onRangeDragEnd","resizeEvent","syncThumbDimensions","updateThumbs","updateRange","document","window","componentDidUpdate","componentWillUnmount","removeNodeEventListener","props","max","min","updateOrientation","setValue","updateRangeLimits","updateDisabledState","updateThumbsDisabledState","updateTabIndexes","isNumber","n","isNaN","arguments","length","undefined","iterateMinMaxProps","fn","getSetProps","condition","expression","setNodeAttribute","node","attribute","setAttribute","removeAttribute","event","isPointerEvent","addEventListener","passive","capture","removeEventListener","fallbackToDefault","property","defaultValue","ifVerticalElse","vertical","horizontal","orientation","currentIndex","safeMinMaxValues","error","safeThumbsDisabledValues","thumbsDisabled","Array","push","newValue","forceSet","callback","currentValue","syncValues","valueSet","onInput","updateAriaValueAttributes","_this3","_","_this4","style","concat","elementBounds","getBoundingClientRect","deltaOffset","bottom","top","right","left","deltaDimension","_this5","_this6","disabled","_this7","_this8","d","currIndex","updateLimits","limit","_this9","m","_this10","getComputedStyle","width","height","currentPosition","nodeBounds","currPos","doesntHaveClassName","className","target","classList","contains","repeat","setFocus","rangeSlideDisabled","deltaMin","deltaMax","nearestThumbIndex","initiateDrag","onThumbDragStart","onRangeDragStart","lastPos","delta","lower","upper","actualStepValue","step","direction","render","createElement","id","ref","type","onChange","role","PureComponent","_default"],"sources":["D:/WFA/testing/latest/node_modules/react-range-slider-input/dist/components/RangeSlider.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.parse-float.js\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// Aliases\nconst abs = Math.abs;\nconst float = parseFloat; // Values\n\nconst MIN = 'min';\nconst MAX = 'max';\nconst ANY = 'any';\nconst VERTICAL = 'vertical';\nconst TABINDEX = 'tabindex'; // Data Attributes\n\nconst DATA_LOWER = 'data-lower';\nconst DATA_UPPER = 'data-upper';\nconst DATA_ACTIVE = 'data-active';\nconst DATA_VERTICAL = 'data-vertical';\nconst DATA_DISABLED = 'data-disabled';\n\nclass RangeSlider extends _react.PureComponent {\n  constructor() {\n    super();\n    this.element = /*#__PURE__*/(0, _react.createRef)();\n    this.input = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.thumb = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.range = /*#__PURE__*/(0, _react.createRef)();\n    this.options = {};\n    this.firstCall = true;\n    this.isControlled = false;\n    this.externalInput = false;\n    this.isComponentMounted = false;\n    this.lastValueProp = [];\n  }\n\n  componentDidMount() {\n    if (!this.isComponentMounted) {\n      this.value = this.setMinMaxProps(); // Thumb indexes for min and max values\n      // (swapped when the thumbs cross each other)\n\n      this.index = this.setMinMaxProps(0, 1); // Thumb width & height for calculation of exact positions and sizes of horizontal thumbs and range\n\n      this.thumbWidth = this.setMinMaxProps();\n      this.thumbHeight = this.setMinMaxProps(); // Slidable range limits (when a thumb is dragged)\n\n      this.rangeLimits = this.setMinMaxProps(); // Slider value depending on the user interaction\n\n      this.sliderValue = this.setMinMaxProps(); // For dragging thumbs and range\n\n      this.maxRangeWidth = 0;\n      this.rangeWidth = 0;\n      this.isDragging = false;\n      this.thumbDrag = false;\n      this.startPos = 0; // initial\n\n      this.reset(); // Add listeners to element\n\n      this.addNodeEventListener(this.element.current, 'pointerdown', e => {\n        this.elementFocused(e);\n      }); // Add listeners to thumbs and set [data-disabled] on disabled thumbs\n\n      this.thumb.forEach((t, i) => {\n        this.addNodeEventListener(t.current, 'pointerdown', e => {\n          this.initiateThumbDrag(e, i, t.current);\n        });\n        this.addNodeEventListener(t.current, 'keydown', e => {\n          if (e.which >= 37 && e.which <= 40) {\n            e.preventDefault();\n            this.stepValue(i, e.which);\n          }\n        });\n      }); // Add listeners to range\n\n      this.addNodeEventListener(this.range.current, 'pointerdown', e => {\n        this.initiateRangeDrag(e);\n      }); // Define and add global listeners\n\n      this.pointerMoveEvent = e => {\n        this.drag(e);\n      };\n\n      this.pointerUpEvent = () => {\n        if (this.isDragging) {\n          this.removeNodeAttribute(this.thumb[0].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.thumb[1].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.range.current, DATA_ACTIVE);\n          this.isDragging = false;\n\n          if (this.thumbDrag) {\n            if (this.options.onThumbDragEnd) {\n              this.options.onThumbDragEnd();\n            }\n          } else {\n            if (this.options.onRangeDragEnd) {\n              this.options.onRangeDragEnd();\n            }\n          }\n        }\n      };\n\n      this.resizeEvent = () => {\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n      };\n\n      this.addNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n      this.addNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n      this.addNodeEventListener(window, 'resize', this.resizeEvent);\n      this.isComponentMounted = true;\n    }\n  }\n\n  componentDidUpdate() {\n    this.reset();\n  }\n\n  componentWillUnmount() {\n    // Remove global listeners\n    this.removeNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n    this.removeNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n    this.removeNodeEventListener(window, 'resize', this.resizeEvent);\n    this.isComponentMounted = false;\n  }\n\n  reset() {\n    this.isControlled = !!this.props.value;\n\n    if (this.isControlled) {\n      if (this.firstCall || this.props.value !== this.lastValueProp) {\n        this.firstCall = false;\n        this.externalInput = true;\n      }\n\n      this.lastValueProp = this.props.value;\n    }\n\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.updateOrientation();\n    this.setValue('', true, false);\n    this.updateRangeLimits();\n    this.updateDisabledState();\n    this.updateThumbsDisabledState();\n    this.updateTabIndexes();\n  }\n\n  isNumber(n) {\n    // check for NaN explicitly\n    // because with NaN, the second exp. evaluates to true\n    return !isNaN(n) && +n + '' === n + '';\n  }\n\n  setMinMaxProps() {\n    let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return {\n      min,\n      max\n    };\n  }\n\n  iterateMinMaxProps(fn) {\n    [MIN, MAX].forEach(fn);\n  }\n\n  getSetProps(condition, expression, fn) {\n    if (condition) {\n      return expression;\n    } else {\n      fn();\n    }\n  }\n\n  setNodeAttribute(node, attribute) {\n    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    node.setAttribute(attribute, value);\n  }\n\n  removeNodeAttribute(node, attribute) {\n    node.removeAttribute(attribute);\n  }\n\n  addNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    // with options for pointer events\n    node.addEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n\n  removeNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    // with options for pointer events\n    node.removeEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n\n  fallbackToDefault(property, defaultValue) {\n    this.options[property] = this.props[property] ? this.props[property] : defaultValue;\n  }\n\n  ifVerticalElse(vertical, horizontal) {\n    return this.options.orientation === VERTICAL ? vertical : horizontal;\n  }\n\n  currentIndex(i) {\n    return i === 1 ? this.index.max : this.index.min;\n  } // Set min and max values to 1 (arbitrarily) if any of the min or max values are \"invalid\"\n  // Setting both values 1 will disable the slider\n  // Called when,\n  // -> the element is initially set\n  // -> min or max properties are modified\n\n\n  safeMinMaxValues() {\n    let error = false;\n\n    if (!this.isNumber(this.options.min) || !this.isNumber(this.options.max)) {\n      error = true;\n    }\n\n    this.options.min = error ? 1 : +this.options.min;\n    this.options.max = error ? 1 : +this.options.max;\n  } // Reframe the thumbsDisabled value if \"invalid\"\n  // Called when,\n  // -> the element is initially set\n  // -> thumbsDisabled property is modified\n\n\n  safeThumbsDisabledValues() {\n    if (this.options.thumbsDisabled instanceof Array) {\n      if (this.options.thumbsDisabled.length === 1) {\n        this.options.thumbsDisabled.push(false);\n      }\n\n      if (this.options.thumbsDisabled.length !== 1 && this.options.thumbsDisabled.length !== 2) {\n        this.options.thumbsDisabled = [false, false];\n      }\n    } else {\n      this.options.thumbsDisabled = [this.options.thumbsDisabled, this.options.thumbsDisabled];\n    } // Boolean Values\n\n\n    this.options.thumbsDisabled[0] = !!this.options.thumbsDisabled[0];\n    this.options.thumbsDisabled[1] = !!this.options.thumbsDisabled[1];\n  } // Called when,\n  // -> the element is initially set\n  // -> min, max, step or value properties are modified\n  // -> thumbs are dragged\n  // -> element is clicked upon\n  // -> an arrow key is pressed\n\n\n  setValue(newValue) {\n    let forceSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // Current value as set in the input elements\n    // which could change while changing min, max and step values\n    const currentValue = this.setMinMaxProps(this.input[0].current.value, this.input[1].current.value); // var value is synced with the values set in the input elements if no newValue is passed\n\n    newValue = newValue || currentValue;\n    this.input[this.index.min].current.value = newValue.min;\n    this.input[this.index.max].current.value = this.thumbDrag || forceSet ? newValue.max : newValue.min + this.rangeWidth;\n    this.syncValues(); // Check if the thumbs cross each other\n\n    if (this.value.min > this.value.max) {\n      // Switch thumb indexes\n      this.index.min = +!this.index.min;\n      this.index.max = +!this.index.max; // Switch thumb attributes\n\n      this.removeNodeAttribute(this.thumb[this.index.min].current, DATA_UPPER);\n      this.removeNodeAttribute(this.thumb[this.index.max].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.min].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.max].current, DATA_UPPER); // Switch thumb drag labels\n\n      if (this.thumbDrag) {\n        this.thumbDrag = this.thumbDrag === MIN ? MAX : MIN;\n      }\n\n      this.syncValues();\n    }\n\n    this.sliderValue = forceSet ? this.value : newValue;\n    let valueSet = false;\n\n    if (currentValue.min !== this.input[0].current.value || forceSet) {\n      valueSet = true;\n    }\n\n    if (currentValue.max !== this.input[1].current.value || forceSet) {\n      valueSet = true;\n    } // Update the positions, dimensions and aria attributes everytime a value is set\n    // and call the onInput function from options (if set)\n\n\n    if (valueSet) {\n      if (callback && this.options.onInput) {\n        this.options.onInput([this.value.min, this.value.max]);\n      }\n\n      if (!this.isControlled || this.externalInput) {\n        this.externalInput = false;\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n        this.updateAriaValueAttributes();\n      }\n    }\n  } // Sync var value with the input elements\n\n\n  syncValues() {\n    this.iterateMinMaxProps(_ => {\n      this.value[_] = +this.input[this.index[_]].current.value;\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n\n\n  updateThumbs() {\n    this.iterateMinMaxProps(_ => {\n      this.thumb[this.index[_]].current.style[this.ifVerticalElse('top', 'left')] = \"calc(\".concat((this.value[_] - this.options.min) / this.maxRangeWidth * 100, \"% + \").concat((0.5 - (this.value[_] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[_], \"px)\");\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n\n\n  updateRange() {\n    const elementBounds = this.element.current.getBoundingClientRect();\n    const deltaOffset = (0.5 - (this.value.min - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).min / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n    const deltaDimension = (0.5 - (this.value.max - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).max / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n    this.range.current.style[this.ifVerticalElse('top', 'left')] = \"\".concat(((this.value.min - this.options.min) / this.maxRangeWidth + deltaOffset) * 100, \"%\");\n    this.range.current.style[this.ifVerticalElse('height', 'width')] = \"\".concat(((this.value.max - this.options.min) / this.maxRangeWidth - (this.value.min - this.options.min) / this.maxRangeWidth - deltaOffset + deltaDimension) * 100, \"%\");\n  }\n\n  updateRangeLimits() {\n    this.iterateMinMaxProps((_, i) => {\n      this.rangeLimits[_] = this.options.thumbsDisabled[i] ? this.value[_] : this.options[_];\n    });\n  } // Called when,\n  // -> thumbs are initially set\n  // -> thumbs are disabled / enabled\n\n\n  updateTabIndexes() {\n    this.iterateMinMaxProps((_, i) => {\n      if (!this.options.disabled && !this.options.thumbsDisabled[i]) {\n        this.setNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX, 0);\n      } else {\n        this.removeNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX);\n      }\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n\n\n  updateAriaValueAttributes() {\n    this.iterateMinMaxProps(_ => {\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemin', this.options.min);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemax', this.options.max);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuenow', this.value[_]);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuetext', this.value[_]);\n    });\n  } // Called when,\n  // -> disabled property is modified\n\n\n  updateDisabledState() {\n    if (this.options.disabled) {\n      this.setNodeAttribute(this.element.current, DATA_DISABLED);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_DISABLED);\n    }\n  } // Called when,\n  // -> thumbsDisabled property is modified\n\n\n  updateThumbsDisabledState() {\n    this.options.thumbsDisabled.forEach((d, i) => {\n      const currIndex = this.currentIndex(i);\n\n      if (d) {\n        this.setNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', true);\n      } else {\n        this.removeNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', false);\n      }\n    });\n  } // Called when,\n  // -> min or max values are modified\n\n\n  updateLimits(limit) {\n    let m = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.options[limit] = m;\n    this.safeMinMaxValues();\n    this.iterateMinMaxProps(_ => {\n      this.input[0].current[_] = this.options[_];\n      this.input[1].current[_] = this.options[_];\n    });\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.setValue('', true);\n    this.updateRangeLimits();\n  } // Called when,\n  // -> the element is initially set\n  // -> orientation property is modified\n\n\n  updateOrientation() {\n    if (this.options.orientation === VERTICAL) {\n      this.setNodeAttribute(this.element.current, DATA_VERTICAL);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_VERTICAL);\n    }\n\n    this.range.current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.range.current.style[this.ifVerticalElse('width', 'height')] = '';\n    this.thumb[0].current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.thumb[1].current.style[this.ifVerticalElse('left', 'top')] = '';\n  } // thumb width & height values are to be synced with the CSS values for correct calculation of\n  // thumb position and range width & position\n  // Called when,\n  // -> setValue is called and a value is set (called before updateThumbs() and updateRange())\n  // -> thumb / range drag is initiated\n  // -> window is resized\n\n\n  syncThumbDimensions() {\n    this.iterateMinMaxProps(_ => {\n      this.thumbWidth[_] = float(window.getComputedStyle(this.thumb[this.index[_]].current).width);\n      this.thumbHeight[_] = float(window.getComputedStyle(this.thumb[this.index[_]].current).height);\n    });\n  } // thumb position calculation depending upon the pointer position\n\n\n  currentPosition(e, node) {\n    const elementBounds = this.element.current.getBoundingClientRect();\n    const nodeBounds = node.getBoundingClientRect();\n    const currPos = (this.ifVerticalElse(nodeBounds.top - elementBounds.top, nodeBounds.left - elementBounds.left) + (e[\"client\".concat(this.ifVerticalElse('Y', 'X'))] - node.getBoundingClientRect()[this.ifVerticalElse('top', 'left')]) - (this.thumbDrag ? (0.5 - (this.value[this.thumbDrag] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[this.thumbDrag] : 0)) / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left) * this.maxRangeWidth + this.options.min;\n\n    if (currPos < this.options.min) {\n      return this.options.min;\n    }\n\n    if (currPos > this.options.max) {\n      return this.options.max;\n    }\n\n    return currPos;\n  }\n\n  doesntHaveClassName(e, className) {\n    return !e.target.classList.contains(className);\n  }\n\n  elementFocused(e) {\n    let repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let setFocus = false;\n\n    if (!this.options.disabled && (this.doesntHaveClassName(e, 'range-slider__thumb') && this.doesntHaveClassName(e, 'range-slider__range') || this.options.rangeSlideDisabled && this.doesntHaveClassName(e, 'range-slider__thumb'))) {\n      setFocus = true;\n    } // No action if both thumbs are disabled\n\n\n    if (setFocus && this.options.thumbsDisabled[0] && this.options.thumbsDisabled[1]) {\n      setFocus = false;\n    }\n\n    if (setFocus) {\n      const currPos = this.currentPosition(e, this.range.current);\n      const deltaMin = abs(this.value.min - currPos);\n      const deltaMax = abs(this.value.max - currPos);\n\n      if (this.options.thumbsDisabled[0]) {\n        if (currPos >= this.value.min) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n          this.initiateThumbDrag(e, this.index.max, this.thumb[this.index.max].current, !repeat);\n        }\n      } else if (this.options.thumbsDisabled[1]) {\n        if (currPos <= this.value.max) {\n          this.setValue(this.setMinMaxProps(currPos, this.value.max), true, !repeat);\n          this.initiateThumbDrag(e, this.index.min, this.thumb[this.index.min].current, !repeat);\n        }\n      } else {\n        let nearestThumbIndex = this.index.max;\n\n        if (deltaMin === deltaMax) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n        } else {\n          this.setValue(this.setMinMaxProps(deltaMin < deltaMax ? currPos : this.value.min, deltaMax < deltaMin ? currPos : this.value.max), true, !repeat);\n          nearestThumbIndex = deltaMin < deltaMax ? this.index.min : this.index.max;\n        }\n\n        this.initiateThumbDrag(e, nearestThumbIndex, this.thumb[nearestThumbIndex].current, !repeat);\n      }\n\n      if (repeat) {\n        this.elementFocused(e, false);\n      }\n    }\n  }\n\n  initiateDrag(e, node) {\n    this.syncThumbDimensions();\n    this.setNodeAttribute(node, DATA_ACTIVE);\n    this.startPos = this.currentPosition(e, node);\n    this.isDragging = true;\n  }\n\n  initiateThumbDrag(e, i, node) {\n    let callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      this.initiateDrag(e, node);\n      this.thumbDrag = this.index.min === i ? MIN : MAX;\n\n      if (callback && this.options.onThumbDragStart) {\n        this.options.onThumbDragStart();\n      }\n    }\n  }\n\n  initiateRangeDrag(e) {\n    if (!this.options.disabled && !this.options.rangeSlideDisabled) {\n      this.initiateDrag(e, this.range.current);\n      this.rangeWidth = this.value.max - this.value.min;\n      this.thumbDrag = false;\n\n      if (this.options.onRangeDragStart) {\n        this.options.onRangeDragStart();\n      }\n    }\n  }\n\n  drag(e) {\n    if (this.isDragging) {\n      const lastPos = this.currentPosition(e, this.range.current);\n      const delta = lastPos - this.startPos;\n      let min = this.value.min;\n      let max = this.value.max;\n      const lower = this.thumbDrag ? this.rangeLimits.min : this.options.min;\n      const upper = this.thumbDrag ? this.rangeLimits.max : this.options.max;\n\n      if (!this.thumbDrag || this.thumbDrag === MIN) {\n        min = this.thumbDrag ? lastPos : this.sliderValue.min + delta;\n      }\n\n      if (!this.thumbDrag || this.thumbDrag === MAX) {\n        max = this.thumbDrag ? lastPos : this.sliderValue.max + delta;\n      }\n\n      if (min >= lower && min <= upper && max >= lower && max <= upper) {\n        this.setValue({\n          min,\n          max\n        });\n        this.startPos = lastPos;\n      } else {\n        // When min thumb reaches upper limit\n        if (min > upper && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(upper, upper));\n          this.startPos = lastPos;\n        } // When max thumb reaches lower limit\n\n\n        if (max < lower && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(lower, lower));\n          this.startPos = lastPos;\n        } // When range / min thumb reaches lower limit\n\n\n        if (min < lower) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(lower, this.value.max - this.value.min + lower));\n          } else {\n            this.setValue(this.setMinMaxProps(lower, this.value.max));\n          }\n\n          this.startPos = lastPos;\n        } // When range / max thumb reaches upper limit\n\n\n        if (max > upper) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(this.value.min - this.value.max + upper, upper));\n          } else {\n            this.setValue(this.setMinMaxProps(this.value.min, upper));\n          }\n\n          this.startPos = lastPos;\n        }\n      }\n\n      if (!this.thumbDrag) {\n        this.updateRangeLimits();\n      }\n    }\n  }\n\n  actualStepValue() {\n    const step = float(this.input[0].current.step);\n    return this.input[0].current.step === ANY ? ANY : step === 0 || isNaN(step) ? 1 : step;\n  } // Step value (up or down) using arrow keys\n\n\n  stepValue(i, key) {\n    const direction = (key === 37 || key === 40 ? -1 : 1) * this.ifVerticalElse(-1, 1);\n\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      let step = this.actualStepValue();\n      step = step === ANY ? 1 : step;\n      let min = this.value.min + step * (this.index.min === i ? direction : 0);\n      let max = this.value.max + step * (this.index.max === i ? direction : 0); // When min thumb reaches upper limit\n\n      if (min > this.rangeLimits.max) {\n        min = this.rangeLimits.max;\n      } // When max thumb reaches lower limit\n\n\n      if (max < this.rangeLimits.min) {\n        max = this.rangeLimits.min;\n      }\n\n      this.setValue({\n        min,\n        max\n      }, true);\n    }\n  }\n\n  render() {\n    // Set options to default values if not set\n    this.fallbackToDefault('rangeSlideDisabled', false);\n    this.fallbackToDefault('thumbsDisabled', [false, false]);\n    this.fallbackToDefault('orientation', 'horizontal');\n    this.fallbackToDefault('defaultValue', [25, 75]);\n    this.fallbackToDefault('disabled', false);\n    this.fallbackToDefault('onThumbDragStart', false);\n    this.fallbackToDefault('onRangeDragStart', false);\n    this.fallbackToDefault('onThumbDragEnd', false);\n    this.fallbackToDefault('onRangeDragEnd', false);\n    this.fallbackToDefault('onInput', false);\n    this.fallbackToDefault('step', 1);\n    this.fallbackToDefault('min', 0);\n    this.fallbackToDefault('max', 100);\n\n    if (this.props.value) {\n      this.fallbackToDefault('value', [25, 75]);\n    }\n\n    this.safeMinMaxValues();\n    this.safeThumbsDisabledValues();\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      \"data-testid\": \"element\",\n      id: this.props.id,\n      ref: this.element,\n      className: (0, _clsx.default)('range-slider', this.props.className)\n    }, /*#__PURE__*/_react.default.createElement(\"input\", {\n      ref: this.input[0],\n      type: \"range\",\n      min: this.options.min,\n      max: this.options.max,\n      step: this.options.step,\n      value: this.props.value ? this.options.value[0] : this.isComponentMounted ? this.value.min : this.options.defaultValue[0],\n      onChange: () => {},\n      disabled: true\n    }), /*#__PURE__*/_react.default.createElement(\"input\", {\n      ref: this.input[1],\n      type: \"range\",\n      min: this.options.min,\n      max: this.options.max,\n      step: this.options.step,\n      value: this.props.value ? this.options.value[1] : this.isComponentMounted ? this.value.max : this.options.defaultValue[1],\n      onChange: () => {},\n      disabled: true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[0],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-lower\": true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[1],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-upper\": true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.range,\n      className: \"range-slider__range\"\n    }));\n  }\n\n}\n\n;\nvar _default = RangeSlider;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,eAAA,GAAAC,OAAA,gFAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAF,OAAA,6EAAAC,OAAA;AAAA,IAAAE,SAAA,GAAAH,OAAA,0EAAAC,OAAA;AAAA,IAAAG,YAAA,GAAAJ,OAAA,6EAAAC,OAAA;AAEbD,OAAO,CAAC,iDAAiD,CAAC;AAE1DK,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACN,OAAO,GAAG,KAAK,CAAC;AAExBD,OAAO,CAAC,mCAAmC,CAAC;AAE5C,IAAIS,MAAM,GAAGC,uBAAuB,CAACV,OAAO,CAAC,OAAO,CAAC,CAAC;AAEtD,IAAIW,KAAK,GAAGC,sBAAsB,CAACZ,OAAO,CAAC,MAAM,CAAC,CAAC;AAEnD,SAASY,sBAAsBA,CAACC,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEZ,OAAO,EAAEY;EAAI,CAAC;AAAE;AAE9F,SAASE,wBAAwBA,CAACC,WAAW,EAAE;EAAE,IAAI,OAAOC,OAAO,KAAK,UAAU,EAAE,OAAO,IAAI;EAAE,IAAIC,iBAAiB,GAAG,IAAID,OAAO,CAAC,CAAC;EAAE,IAAIE,gBAAgB,GAAG,IAAIF,OAAO,CAAC,CAAC;EAAE,OAAO,CAACF,wBAAwB,GAAG,SAASA,wBAAwBA,CAACC,WAAW,EAAE;IAAE,OAAOA,WAAW,GAAGG,gBAAgB,GAAGD,iBAAiB;EAAE,CAAC,EAAEF,WAAW,CAAC;AAAE;AAE9U,SAASN,uBAAuBA,CAACG,GAAG,EAAEG,WAAW,EAAE;EAAE,IAAI,CAACA,WAAW,IAAIH,GAAG,IAAIA,GAAG,CAACC,UAAU,EAAE;IAAE,OAAOD,GAAG;EAAE;EAAE,IAAIA,GAAG,KAAK,IAAI,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;IAAE,OAAO;MAAEZ,OAAO,EAAEY;IAAI,CAAC;EAAE;EAAE,IAAIO,KAAK,GAAGL,wBAAwB,CAACC,WAAW,CAAC;EAAE,IAAII,KAAK,IAAIA,KAAK,CAACC,GAAG,CAACR,GAAG,CAAC,EAAE;IAAE,OAAOO,KAAK,CAACE,GAAG,CAACT,GAAG,CAAC;EAAE;EAAE,IAAIU,MAAM,GAAG,CAAC,CAAC;EAAE,IAAIC,qBAAqB,GAAGnB,MAAM,CAACC,cAAc,IAAID,MAAM,CAACoB,wBAAwB;EAAE,KAAK,IAAIC,GAAG,IAAIb,GAAG,EAAE;IAAE,IAAIa,GAAG,KAAK,SAAS,IAAIrB,MAAM,CAACsB,SAAS,CAACC,cAAc,CAACC,IAAI,CAAChB,GAAG,EAAEa,GAAG,CAAC,EAAE;MAAE,IAAII,IAAI,GAAGN,qBAAqB,GAAGnB,MAAM,CAACoB,wBAAwB,CAACZ,GAAG,EAAEa,GAAG,CAAC,GAAG,IAAI;MAAE,IAAII,IAAI,KAAKA,IAAI,CAACR,GAAG,IAAIQ,IAAI,CAACC,GAAG,CAAC,EAAE;QAAE1B,MAAM,CAACC,cAAc,CAACiB,MAAM,EAAEG,GAAG,EAAEI,IAAI,CAAC;MAAE,CAAC,MAAM;QAAEP,MAAM,CAACG,GAAG,CAAC,GAAGb,GAAG,CAACa,GAAG,CAAC;MAAE;IAAE;EAAE;EAAEH,MAAM,CAACtB,OAAO,GAAGY,GAAG;EAAE,IAAIO,KAAK,EAAE;IAAEA,KAAK,CAACW,GAAG,CAAClB,GAAG,EAAEU,MAAM,CAAC;EAAE;EAAE,OAAOA,MAAM;AAAE;;AAEnyB;AACA,IAAMS,GAAG,GAAGC,IAAI,CAACD,GAAG;AACpB,IAAME,KAAK,GAAGC,UAAU,CAAC,CAAC;;AAE1B,IAAMC,GAAG,GAAG,KAAK;AACjB,IAAMC,GAAG,GAAG,KAAK;AACjB,IAAMC,GAAG,GAAG,KAAK;AACjB,IAAMC,QAAQ,GAAG,UAAU;AAC3B,IAAMC,QAAQ,GAAG,UAAU,CAAC,CAAC;;AAE7B,IAAMC,UAAU,GAAG,YAAY;AAC/B,IAAMC,UAAU,GAAG,YAAY;AAC/B,IAAMC,WAAW,GAAG,aAAa;AACjC,IAAMC,aAAa,GAAG,eAAe;AACrC,IAAMC,aAAa,GAAG,eAAe;AAAC,IAEhCC,WAAW,0BAAAC,oBAAA;EAAA5C,SAAA,CAAA2C,WAAA,EAAAC,oBAAA;EAAA,IAAAC,MAAA,GAAA5C,YAAA,CAAA0C,WAAA;EACf,SAAAA,YAAA,EAAc;IAAA,IAAAG,KAAA;IAAAlD,eAAA,OAAA+C,WAAA;IACZG,KAAA,GAAAD,MAAA,CAAAnB,IAAA;IACAoB,KAAA,CAAKC,OAAO,GAAG,aAAa,CAAC,CAAC,EAAEzC,MAAM,CAAC0C,SAAS,EAAE,CAAC;IACnDF,KAAA,CAAKG,KAAK,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE3C,MAAM,CAAC0C,SAAS,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE1C,MAAM,CAAC0C,SAAS,EAAE,CAAC,CAAC;IACzFF,KAAA,CAAKI,KAAK,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE5C,MAAM,CAAC0C,SAAS,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE1C,MAAM,CAAC0C,SAAS,EAAE,CAAC,CAAC;IACzFF,KAAA,CAAKK,KAAK,GAAG,aAAa,CAAC,CAAC,EAAE7C,MAAM,CAAC0C,SAAS,EAAE,CAAC;IACjDF,KAAA,CAAKM,OAAO,GAAG,CAAC,CAAC;IACjBN,KAAA,CAAKO,SAAS,GAAG,IAAI;IACrBP,KAAA,CAAKQ,YAAY,GAAG,KAAK;IACzBR,KAAA,CAAKS,aAAa,GAAG,KAAK;IAC1BT,KAAA,CAAKU,kBAAkB,GAAG,KAAK;IAC/BV,KAAA,CAAKW,aAAa,GAAG,EAAE;IAAC,OAAAX,KAAA;EAC1B;EAAC/C,YAAA,CAAA4C,WAAA;IAAApB,GAAA;IAAAlB,KAAA,EAED,SAAAqD,kBAAA,EAAoB;MAAA,IAAAC,MAAA;MAClB,IAAI,CAAC,IAAI,CAACH,kBAAkB,EAAE;QAC5B,IAAI,CAACnD,KAAK,GAAG,IAAI,CAACuD,cAAc,CAAC,CAAC,CAAC,CAAC;QACpC;;QAEA,IAAI,CAACC,KAAK,GAAG,IAAI,CAACD,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;QAExC,IAAI,CAACE,UAAU,GAAG,IAAI,CAACF,cAAc,CAAC,CAAC;QACvC,IAAI,CAACG,WAAW,GAAG,IAAI,CAACH,cAAc,CAAC,CAAC,CAAC,CAAC;;QAE1C,IAAI,CAACI,WAAW,GAAG,IAAI,CAACJ,cAAc,CAAC,CAAC,CAAC,CAAC;;QAE1C,IAAI,CAACK,WAAW,GAAG,IAAI,CAACL,cAAc,CAAC,CAAC,CAAC,CAAC;;QAE1C,IAAI,CAACM,aAAa,GAAG,CAAC;QACtB,IAAI,CAACC,UAAU,GAAG,CAAC;QACnB,IAAI,CAACC,UAAU,GAAG,KAAK;QACvB,IAAI,CAACC,SAAS,GAAG,KAAK;QACtB,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC,CAAC;;QAEnB,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;;QAEd,IAAI,CAACC,oBAAoB,CAAC,IAAI,CAACzB,OAAO,CAAC0B,OAAO,EAAE,aAAa,EAAE,UAAAC,CAAC,EAAI;UAClEf,MAAI,CAACgB,cAAc,CAACD,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC,CAAC;;QAEJ,IAAI,CAACxB,KAAK,CAAC0B,OAAO,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;UAC3BnB,MAAI,CAACa,oBAAoB,CAACK,CAAC,CAACJ,OAAO,EAAE,aAAa,EAAE,UAAAC,CAAC,EAAI;YACvDf,MAAI,CAACoB,iBAAiB,CAACL,CAAC,EAAEI,CAAC,EAAED,CAAC,CAACJ,OAAO,CAAC;UACzC,CAAC,CAAC;UACFd,MAAI,CAACa,oBAAoB,CAACK,CAAC,CAACJ,OAAO,EAAE,SAAS,EAAE,UAAAC,CAAC,EAAI;YACnD,IAAIA,CAAC,CAACM,KAAK,IAAI,EAAE,IAAIN,CAAC,CAACM,KAAK,IAAI,EAAE,EAAE;cAClCN,CAAC,CAACO,cAAc,CAAC,CAAC;cAClBtB,MAAI,CAACuB,SAAS,CAACJ,CAAC,EAAEJ,CAAC,CAACM,KAAK,CAAC;YAC5B;UACF,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC,CAAC;;QAEJ,IAAI,CAACR,oBAAoB,CAAC,IAAI,CAACrB,KAAK,CAACsB,OAAO,EAAE,aAAa,EAAE,UAAAC,CAAC,EAAI;UAChEf,MAAI,CAACwB,iBAAiB,CAACT,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC;;QAEJ,IAAI,CAACU,gBAAgB,GAAG,UAAAV,CAAC,EAAI;UAC3Bf,MAAI,CAAC0B,IAAI,CAACX,CAAC,CAAC;QACd,CAAC;QAED,IAAI,CAACY,cAAc,GAAG,YAAM;UAC1B,IAAI3B,MAAI,CAACS,UAAU,EAAE;YACnBT,MAAI,CAAC4B,mBAAmB,CAAC5B,MAAI,CAACT,KAAK,CAAC,CAAC,CAAC,CAACuB,OAAO,EAAEjC,WAAW,CAAC;YAC5DmB,MAAI,CAAC4B,mBAAmB,CAAC5B,MAAI,CAACT,KAAK,CAAC,CAAC,CAAC,CAACuB,OAAO,EAAEjC,WAAW,CAAC;YAC5DmB,MAAI,CAAC4B,mBAAmB,CAAC5B,MAAI,CAACR,KAAK,CAACsB,OAAO,EAAEjC,WAAW,CAAC;YACzDmB,MAAI,CAACS,UAAU,GAAG,KAAK;YAEvB,IAAIT,MAAI,CAACU,SAAS,EAAE;cAClB,IAAIV,MAAI,CAACP,OAAO,CAACoC,cAAc,EAAE;gBAC/B7B,MAAI,CAACP,OAAO,CAACoC,cAAc,CAAC,CAAC;cAC/B;YACF,CAAC,MAAM;cACL,IAAI7B,MAAI,CAACP,OAAO,CAACqC,cAAc,EAAE;gBAC/B9B,MAAI,CAACP,OAAO,CAACqC,cAAc,CAAC,CAAC;cAC/B;YACF;UACF;QACF,CAAC;QAED,IAAI,CAACC,WAAW,GAAG,YAAM;UACvB/B,MAAI,CAACgC,mBAAmB,CAAC,CAAC;UAC1BhC,MAAI,CAACiC,YAAY,CAAC,CAAC;UACnBjC,MAAI,CAACkC,WAAW,CAAC,CAAC;QACpB,CAAC;QAED,IAAI,CAACrB,oBAAoB,CAACsB,QAAQ,EAAE,aAAa,EAAE,IAAI,CAACV,gBAAgB,CAAC;QACzE,IAAI,CAACZ,oBAAoB,CAACsB,QAAQ,EAAE,WAAW,EAAE,IAAI,CAACR,cAAc,CAAC;QACrE,IAAI,CAACd,oBAAoB,CAACuB,MAAM,EAAE,QAAQ,EAAE,IAAI,CAACL,WAAW,CAAC;QAC7D,IAAI,CAAClC,kBAAkB,GAAG,IAAI;MAChC;IACF;EAAC;IAAAjC,GAAA;IAAAlB,KAAA,EAED,SAAA2F,mBAAA,EAAqB;MACnB,IAAI,CAACzB,KAAK,CAAC,CAAC;IACd;EAAC;IAAAhD,GAAA;IAAAlB,KAAA,EAED,SAAA4F,qBAAA,EAAuB;MACrB;MACA,IAAI,CAACC,uBAAuB,CAACJ,QAAQ,EAAE,aAAa,EAAE,IAAI,CAACV,gBAAgB,CAAC;MAC5E,IAAI,CAACc,uBAAuB,CAACJ,QAAQ,EAAE,WAAW,EAAE,IAAI,CAACR,cAAc,CAAC;MACxE,IAAI,CAACY,uBAAuB,CAACH,MAAM,EAAE,QAAQ,EAAE,IAAI,CAACL,WAAW,CAAC;MAChE,IAAI,CAAClC,kBAAkB,GAAG,KAAK;IACjC;EAAC;IAAAjC,GAAA;IAAAlB,KAAA,EAED,SAAAkE,MAAA,EAAQ;MACN,IAAI,CAACjB,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC6C,KAAK,CAAC9F,KAAK;MAEtC,IAAI,IAAI,CAACiD,YAAY,EAAE;QACrB,IAAI,IAAI,CAACD,SAAS,IAAI,IAAI,CAAC8C,KAAK,CAAC9F,KAAK,KAAK,IAAI,CAACoD,aAAa,EAAE;UAC7D,IAAI,CAACJ,SAAS,GAAG,KAAK;UACtB,IAAI,CAACE,aAAa,GAAG,IAAI;QAC3B;QAEA,IAAI,CAACE,aAAa,GAAG,IAAI,CAAC0C,KAAK,CAAC9F,KAAK;MACvC;MAEA,IAAI,CAAC6D,aAAa,GAAG,IAAI,CAACd,OAAO,CAACgD,GAAG,GAAG,IAAI,CAAChD,OAAO,CAACiD,GAAG;MACxD,IAAI,CAACC,iBAAiB,CAAC,CAAC;MACxB,IAAI,CAACC,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC;MAC9B,IAAI,CAACC,iBAAiB,CAAC,CAAC;MACxB,IAAI,CAACC,mBAAmB,CAAC,CAAC;MAC1B,IAAI,CAACC,yBAAyB,CAAC,CAAC;MAChC,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACzB;EAAC;IAAApF,GAAA;IAAAlB,KAAA,EAED,SAAAuG,SAASC,CAAC,EAAE;MACV;MACA;MACA,OAAO,CAACC,KAAK,CAACD,CAAC,CAAC,IAAI,CAACA,CAAC,GAAG,EAAE,KAAKA,CAAC,GAAG,EAAE;IACxC;EAAC;IAAAtF,GAAA;IAAAlB,KAAA,EAED,SAAAuD,eAAA,EAAiB;MACf,IAAIyC,GAAG,GAAGU,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;MAC/E,IAAIX,GAAG,GAAGW,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;MAC/E,OAAO;QACLV,GAAG,EAAHA,GAAG;QACHD,GAAG,EAAHA;MACF,CAAC;IACH;EAAC;IAAA7E,GAAA;IAAAlB,KAAA,EAED,SAAA6G,mBAAmBC,EAAE,EAAE;MACrB,CAAClF,GAAG,EAAEC,GAAG,CAAC,CAAC0C,OAAO,CAACuC,EAAE,CAAC;IACxB;EAAC;IAAA5F,GAAA;IAAAlB,KAAA,EAED,SAAA+G,YAAYC,SAAS,EAAEC,UAAU,EAAEH,EAAE,EAAE;MACrC,IAAIE,SAAS,EAAE;QACb,OAAOC,UAAU;MACnB,CAAC,MAAM;QACLH,EAAE,CAAC,CAAC;MACN;IACF;EAAC;IAAA5F,GAAA;IAAAlB,KAAA,EAED,SAAAkH,iBAAiBC,IAAI,EAAEC,SAAS,EAAE;MAChC,IAAIpH,KAAK,GAAG0G,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;MAClFS,IAAI,CAACE,YAAY,CAACD,SAAS,EAAEpH,KAAK,CAAC;IACrC;EAAC;IAAAkB,GAAA;IAAAlB,KAAA,EAED,SAAAkF,oBAAoBiC,IAAI,EAAEC,SAAS,EAAE;MACnCD,IAAI,CAACG,eAAe,CAACF,SAAS,CAAC;IACjC;EAAC;IAAAlG,GAAA;IAAAlB,KAAA,EAED,SAAAmE,qBAAqBgD,IAAI,EAAEI,KAAK,EAAET,EAAE,EAAE;MACpC,IAAIU,cAAc,GAAGd,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;MAC7F;MACAS,IAAI,CAACM,gBAAgB,CAACF,KAAK,EAAET,EAAE,EAAEU,cAAc,GAAG;QAChDE,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE;MACX,CAAC,GAAG,CAAC,CAAC,CAAC;IACT;EAAC;IAAAzG,GAAA;IAAAlB,KAAA,EAED,SAAA6F,wBAAwBsB,IAAI,EAAEI,KAAK,EAAET,EAAE,EAAE;MACvC,IAAIU,cAAc,GAAGd,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;MAC7F;MACAS,IAAI,CAACS,mBAAmB,CAACL,KAAK,EAAET,EAAE,EAAEU,cAAc,GAAG;QACnDE,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE;MACX,CAAC,GAAG,CAAC,CAAC,CAAC;IACT;EAAC;IAAAzG,GAAA;IAAAlB,KAAA,EAED,SAAA6H,kBAAkBC,QAAQ,EAAEC,YAAY,EAAE;MACxC,IAAI,CAAChF,OAAO,CAAC+E,QAAQ,CAAC,GAAG,IAAI,CAAChC,KAAK,CAACgC,QAAQ,CAAC,GAAG,IAAI,CAAChC,KAAK,CAACgC,QAAQ,CAAC,GAAGC,YAAY;IACrF;EAAC;IAAA7G,GAAA;IAAAlB,KAAA,EAED,SAAAgI,eAAeC,QAAQ,EAAEC,UAAU,EAAE;MACnC,OAAO,IAAI,CAACnF,OAAO,CAACoF,WAAW,KAAKpG,QAAQ,GAAGkG,QAAQ,GAAGC,UAAU;IACtE;EAAC;IAAAhH,GAAA;IAAAlB,KAAA,EAED,SAAAoI,aAAa3D,CAAC,EAAE;MACd,OAAOA,CAAC,KAAK,CAAC,GAAG,IAAI,CAACjB,KAAK,CAACuC,GAAG,GAAG,IAAI,CAACvC,KAAK,CAACwC,GAAG;IAClD,CAAC,CAAC;IACF;IACA;IACA;IACA;EAAA;IAAA9E,GAAA;IAAAlB,KAAA,EAGA,SAAAqI,iBAAA,EAAmB;MACjB,IAAIC,KAAK,GAAG,KAAK;MAEjB,IAAI,CAAC,IAAI,CAAC/B,QAAQ,CAAC,IAAI,CAACxD,OAAO,CAACiD,GAAG,CAAC,IAAI,CAAC,IAAI,CAACO,QAAQ,CAAC,IAAI,CAACxD,OAAO,CAACgD,GAAG,CAAC,EAAE;QACxEuC,KAAK,GAAG,IAAI;MACd;MAEA,IAAI,CAACvF,OAAO,CAACiD,GAAG,GAAGsC,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAACvF,OAAO,CAACiD,GAAG;MAChD,IAAI,CAACjD,OAAO,CAACgD,GAAG,GAAGuC,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAACvF,OAAO,CAACgD,GAAG;IAClD,CAAC,CAAC;IACF;IACA;IACA;EAAA;IAAA7E,GAAA;IAAAlB,KAAA,EAGA,SAAAuI,yBAAA,EAA2B;MACzB,IAAI,IAAI,CAACxF,OAAO,CAACyF,cAAc,YAAYC,KAAK,EAAE;QAChD,IAAI,IAAI,CAAC1F,OAAO,CAACyF,cAAc,CAAC7B,MAAM,KAAK,CAAC,EAAE;UAC5C,IAAI,CAAC5D,OAAO,CAACyF,cAAc,CAACE,IAAI,CAAC,KAAK,CAAC;QACzC;QAEA,IAAI,IAAI,CAAC3F,OAAO,CAACyF,cAAc,CAAC7B,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC5D,OAAO,CAACyF,cAAc,CAAC7B,MAAM,KAAK,CAAC,EAAE;UACxF,IAAI,CAAC5D,OAAO,CAACyF,cAAc,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;QAC9C;MACF,CAAC,MAAM;QACL,IAAI,CAACzF,OAAO,CAACyF,cAAc,GAAG,CAAC,IAAI,CAACzF,OAAO,CAACyF,cAAc,EAAE,IAAI,CAACzF,OAAO,CAACyF,cAAc,CAAC;MAC1F,CAAC,CAAC;;MAGF,IAAI,CAACzF,OAAO,CAACyF,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAACzF,OAAO,CAACyF,cAAc,CAAC,CAAC,CAAC;MACjE,IAAI,CAACzF,OAAO,CAACyF,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAACzF,OAAO,CAACyF,cAAc,CAAC,CAAC,CAAC;IACnE,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;EAAA;IAAAtH,GAAA;IAAAlB,KAAA,EAGA,SAAAkG,SAASyC,QAAQ,EAAE;MACjB,IAAIC,QAAQ,GAAGlC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;MACxF,IAAImC,QAAQ,GAAGnC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;MACvF;MACA;MACA,IAAMoC,YAAY,GAAG,IAAI,CAACvF,cAAc,CAAC,IAAI,CAACX,KAAK,CAAC,CAAC,CAAC,CAACwB,OAAO,CAACpE,KAAK,EAAE,IAAI,CAAC4C,KAAK,CAAC,CAAC,CAAC,CAACwB,OAAO,CAACpE,KAAK,CAAC,CAAC,CAAC;;MAEpG2I,QAAQ,GAAGA,QAAQ,IAAIG,YAAY;MACnC,IAAI,CAAClG,KAAK,CAAC,IAAI,CAACY,KAAK,CAACwC,GAAG,CAAC,CAAC5B,OAAO,CAACpE,KAAK,GAAG2I,QAAQ,CAAC3C,GAAG;MACvD,IAAI,CAACpD,KAAK,CAAC,IAAI,CAACY,KAAK,CAACuC,GAAG,CAAC,CAAC3B,OAAO,CAACpE,KAAK,GAAG,IAAI,CAACgE,SAAS,IAAI4E,QAAQ,GAAGD,QAAQ,CAAC5C,GAAG,GAAG4C,QAAQ,CAAC3C,GAAG,GAAG,IAAI,CAAClC,UAAU;MACrH,IAAI,CAACiF,UAAU,CAAC,CAAC,CAAC,CAAC;;MAEnB,IAAI,IAAI,CAAC/I,KAAK,CAACgG,GAAG,GAAG,IAAI,CAAChG,KAAK,CAAC+F,GAAG,EAAE;QACnC;QACA,IAAI,CAACvC,KAAK,CAACwC,GAAG,GAAG,CAAC,CAAC,IAAI,CAACxC,KAAK,CAACwC,GAAG;QACjC,IAAI,CAACxC,KAAK,CAACuC,GAAG,GAAG,CAAC,CAAC,IAAI,CAACvC,KAAK,CAACuC,GAAG,CAAC,CAAC;;QAEnC,IAAI,CAACb,mBAAmB,CAAC,IAAI,CAACrC,KAAK,CAAC,IAAI,CAACW,KAAK,CAACwC,GAAG,CAAC,CAAC5B,OAAO,EAAElC,UAAU,CAAC;QACxE,IAAI,CAACgD,mBAAmB,CAAC,IAAI,CAACrC,KAAK,CAAC,IAAI,CAACW,KAAK,CAACuC,GAAG,CAAC,CAAC3B,OAAO,EAAEnC,UAAU,CAAC;QACxE,IAAI,CAACiF,gBAAgB,CAAC,IAAI,CAACrE,KAAK,CAAC,IAAI,CAACW,KAAK,CAACwC,GAAG,CAAC,CAAC5B,OAAO,EAAEnC,UAAU,CAAC;QACrE,IAAI,CAACiF,gBAAgB,CAAC,IAAI,CAACrE,KAAK,CAAC,IAAI,CAACW,KAAK,CAACuC,GAAG,CAAC,CAAC3B,OAAO,EAAElC,UAAU,CAAC,CAAC,CAAC;;QAEvE,IAAI,IAAI,CAAC8B,SAAS,EAAE;UAClB,IAAI,CAACA,SAAS,GAAG,IAAI,CAACA,SAAS,KAAKpC,GAAG,GAAGC,GAAG,GAAGD,GAAG;QACrD;QAEA,IAAI,CAACmH,UAAU,CAAC,CAAC;MACnB;MAEA,IAAI,CAACnF,WAAW,GAAGgF,QAAQ,GAAG,IAAI,CAAC5I,KAAK,GAAG2I,QAAQ;MACnD,IAAIK,QAAQ,GAAG,KAAK;MAEpB,IAAIF,YAAY,CAAC9C,GAAG,KAAK,IAAI,CAACpD,KAAK,CAAC,CAAC,CAAC,CAACwB,OAAO,CAACpE,KAAK,IAAI4I,QAAQ,EAAE;QAChEI,QAAQ,GAAG,IAAI;MACjB;MAEA,IAAIF,YAAY,CAAC/C,GAAG,KAAK,IAAI,CAACnD,KAAK,CAAC,CAAC,CAAC,CAACwB,OAAO,CAACpE,KAAK,IAAI4I,QAAQ,EAAE;QAChEI,QAAQ,GAAG,IAAI;MACjB,CAAC,CAAC;MACF;;MAGA,IAAIA,QAAQ,EAAE;QACZ,IAAIH,QAAQ,IAAI,IAAI,CAAC9F,OAAO,CAACkG,OAAO,EAAE;UACpC,IAAI,CAAClG,OAAO,CAACkG,OAAO,CAAC,CAAC,IAAI,CAACjJ,KAAK,CAACgG,GAAG,EAAE,IAAI,CAAChG,KAAK,CAAC+F,GAAG,CAAC,CAAC;QACxD;QAEA,IAAI,CAAC,IAAI,CAAC9C,YAAY,IAAI,IAAI,CAACC,aAAa,EAAE;UAC5C,IAAI,CAACA,aAAa,GAAG,KAAK;UAC1B,IAAI,CAACoC,mBAAmB,CAAC,CAAC;UAC1B,IAAI,CAACC,YAAY,CAAC,CAAC;UACnB,IAAI,CAACC,WAAW,CAAC,CAAC;UAClB,IAAI,CAAC0D,yBAAyB,CAAC,CAAC;QAClC;MACF;IACF,CAAC,CAAC;EAAA;IAAAhI,GAAA;IAAAlB,KAAA,EAGF,SAAA+I,WAAA,EAAa;MAAA,IAAAI,MAAA;MACX,IAAI,CAACtC,kBAAkB,CAAC,UAAAuC,CAAC,EAAI;QAC3BD,MAAI,CAACnJ,KAAK,CAACoJ,CAAC,CAAC,GAAG,CAACD,MAAI,CAACvG,KAAK,CAACuG,MAAI,CAAC3F,KAAK,CAAC4F,CAAC,CAAC,CAAC,CAAChF,OAAO,CAACpE,KAAK;MAC1D,CAAC,CAAC;IACJ,CAAC,CAAC;IACF;IACA;EAAA;IAAAkB,GAAA;IAAAlB,KAAA,EAGA,SAAAuF,aAAA,EAAe;MAAA,IAAA8D,MAAA;MACb,IAAI,CAACxC,kBAAkB,CAAC,UAAAuC,CAAC,EAAI;QAC3BC,MAAI,CAACxG,KAAK,CAACwG,MAAI,CAAC7F,KAAK,CAAC4F,CAAC,CAAC,CAAC,CAAChF,OAAO,CAACkF,KAAK,CAACD,MAAI,CAACrB,cAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,GAAG,OAAO,CAACuB,MAAM,CAAC,CAACF,MAAI,CAACrJ,KAAK,CAACoJ,CAAC,CAAC,GAAGC,MAAI,CAACtG,OAAO,CAACiD,GAAG,IAAIqD,MAAI,CAACxF,aAAa,GAAG,GAAG,EAAE,MAAM,CAAC,CAAC0F,MAAM,CAAC,CAAC,GAAG,GAAG,CAACF,MAAI,CAACrJ,KAAK,CAACoJ,CAAC,CAAC,GAAGC,MAAI,CAACtG,OAAO,CAACiD,GAAG,IAAIqD,MAAI,CAACxF,aAAa,IAAIwF,MAAI,CAACrB,cAAc,CAACqB,MAAI,CAAC3F,WAAW,EAAE2F,MAAI,CAAC5F,UAAU,CAAC,CAAC2F,CAAC,CAAC,EAAE,KAAK,CAAC;MAChT,CAAC,CAAC;IACJ,CAAC,CAAC;IACF;IACA;EAAA;IAAAlI,GAAA;IAAAlB,KAAA,EAGA,SAAAwF,YAAA,EAAc;MACZ,IAAMgE,aAAa,GAAG,IAAI,CAAC9G,OAAO,CAAC0B,OAAO,CAACqF,qBAAqB,CAAC,CAAC;MAClE,IAAMC,WAAW,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC1J,KAAK,CAACgG,GAAG,GAAG,IAAI,CAACjD,OAAO,CAACiD,GAAG,IAAI,IAAI,CAACnC,aAAa,IAAI,IAAI,CAACmE,cAAc,CAAC,IAAI,CAACtE,WAAW,EAAE,IAAI,CAACD,UAAU,CAAC,CAACuC,GAAG,GAAG,IAAI,CAACgC,cAAc,CAACwB,aAAa,CAACG,MAAM,GAAGH,aAAa,CAACI,GAAG,EAAEJ,aAAa,CAACK,KAAK,GAAGL,aAAa,CAACM,IAAI,CAAC;MAC3P,IAAMC,cAAc,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC/J,KAAK,CAAC+F,GAAG,GAAG,IAAI,CAAChD,OAAO,CAACiD,GAAG,IAAI,IAAI,CAACnC,aAAa,IAAI,IAAI,CAACmE,cAAc,CAAC,IAAI,CAACtE,WAAW,EAAE,IAAI,CAACD,UAAU,CAAC,CAACsC,GAAG,GAAG,IAAI,CAACiC,cAAc,CAACwB,aAAa,CAACG,MAAM,GAAGH,aAAa,CAACI,GAAG,EAAEJ,aAAa,CAACK,KAAK,GAAGL,aAAa,CAACM,IAAI,CAAC;MAC9P,IAAI,CAAChH,KAAK,CAACsB,OAAO,CAACkF,KAAK,CAAC,IAAI,CAACtB,cAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,CAACuB,MAAM,CAAC,CAAC,CAAC,IAAI,CAACvJ,KAAK,CAACgG,GAAG,GAAG,IAAI,CAACjD,OAAO,CAACiD,GAAG,IAAI,IAAI,CAACnC,aAAa,GAAG6F,WAAW,IAAI,GAAG,EAAE,GAAG,CAAC;MAC7J,IAAI,CAAC5G,KAAK,CAACsB,OAAO,CAACkF,KAAK,CAAC,IAAI,CAACtB,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,CAACuB,MAAM,CAAC,CAAC,CAAC,IAAI,CAACvJ,KAAK,CAAC+F,GAAG,GAAG,IAAI,CAAChD,OAAO,CAACiD,GAAG,IAAI,IAAI,CAACnC,aAAa,GAAG,CAAC,IAAI,CAAC7D,KAAK,CAACgG,GAAG,GAAG,IAAI,CAACjD,OAAO,CAACiD,GAAG,IAAI,IAAI,CAACnC,aAAa,GAAG6F,WAAW,GAAGK,cAAc,IAAI,GAAG,EAAE,GAAG,CAAC;IAC/O;EAAC;IAAA7I,GAAA;IAAAlB,KAAA,EAED,SAAAmG,kBAAA,EAAoB;MAAA,IAAA6D,MAAA;MAClB,IAAI,CAACnD,kBAAkB,CAAC,UAACuC,CAAC,EAAE3E,CAAC,EAAK;QAChCuF,MAAI,CAACrG,WAAW,CAACyF,CAAC,CAAC,GAAGY,MAAI,CAACjH,OAAO,CAACyF,cAAc,CAAC/D,CAAC,CAAC,GAAGuF,MAAI,CAAChK,KAAK,CAACoJ,CAAC,CAAC,GAAGY,MAAI,CAACjH,OAAO,CAACqG,CAAC,CAAC;MACxF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF;IACA;EAAA;IAAAlI,GAAA;IAAAlB,KAAA,EAGA,SAAAsG,iBAAA,EAAmB;MAAA,IAAA2D,MAAA;MACjB,IAAI,CAACpD,kBAAkB,CAAC,UAACuC,CAAC,EAAE3E,CAAC,EAAK;QAChC,IAAI,CAACwF,MAAI,CAAClH,OAAO,CAACmH,QAAQ,IAAI,CAACD,MAAI,CAAClH,OAAO,CAACyF,cAAc,CAAC/D,CAAC,CAAC,EAAE;UAC7DwF,MAAI,CAAC/C,gBAAgB,CAAC+C,MAAI,CAACpH,KAAK,CAACoH,MAAI,CAAC7B,YAAY,CAAC3D,CAAC,CAAC,CAAC,CAACL,OAAO,EAAEpC,QAAQ,EAAE,CAAC,CAAC;QAC9E,CAAC,MAAM;UACLiI,MAAI,CAAC/E,mBAAmB,CAAC+E,MAAI,CAACpH,KAAK,CAACoH,MAAI,CAAC7B,YAAY,CAAC3D,CAAC,CAAC,CAAC,CAACL,OAAO,EAAEpC,QAAQ,CAAC;QAC9E;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF;EAAA;IAAAd,GAAA;IAAAlB,KAAA,EAGA,SAAAkJ,0BAAA,EAA4B;MAAA,IAAAiB,MAAA;MAC1B,IAAI,CAACtD,kBAAkB,CAAC,UAAAuC,CAAC,EAAI;QAC3Be,MAAI,CAACjD,gBAAgB,CAACiD,MAAI,CAACtH,KAAK,CAACsH,MAAI,CAAC3G,KAAK,CAAC4F,CAAC,CAAC,CAAC,CAAChF,OAAO,EAAE,eAAe,EAAE+F,MAAI,CAACpH,OAAO,CAACiD,GAAG,CAAC;QAC3FmE,MAAI,CAACjD,gBAAgB,CAACiD,MAAI,CAACtH,KAAK,CAACsH,MAAI,CAAC3G,KAAK,CAAC4F,CAAC,CAAC,CAAC,CAAChF,OAAO,EAAE,eAAe,EAAE+F,MAAI,CAACpH,OAAO,CAACgD,GAAG,CAAC;QAC3FoE,MAAI,CAACjD,gBAAgB,CAACiD,MAAI,CAACtH,KAAK,CAACsH,MAAI,CAAC3G,KAAK,CAAC4F,CAAC,CAAC,CAAC,CAAChF,OAAO,EAAE,eAAe,EAAE+F,MAAI,CAACnK,KAAK,CAACoJ,CAAC,CAAC,CAAC;QACxFe,MAAI,CAACjD,gBAAgB,CAACiD,MAAI,CAACtH,KAAK,CAACsH,MAAI,CAAC3G,KAAK,CAAC4F,CAAC,CAAC,CAAC,CAAChF,OAAO,EAAE,gBAAgB,EAAE+F,MAAI,CAACnK,KAAK,CAACoJ,CAAC,CAAC,CAAC;MAC3F,CAAC,CAAC;IACJ,CAAC,CAAC;IACF;EAAA;IAAAlI,GAAA;IAAAlB,KAAA,EAGA,SAAAoG,oBAAA,EAAsB;MACpB,IAAI,IAAI,CAACrD,OAAO,CAACmH,QAAQ,EAAE;QACzB,IAAI,CAAChD,gBAAgB,CAAC,IAAI,CAACxE,OAAO,CAAC0B,OAAO,EAAE/B,aAAa,CAAC;MAC5D,CAAC,MAAM;QACL,IAAI,CAAC6C,mBAAmB,CAAC,IAAI,CAACxC,OAAO,CAAC0B,OAAO,EAAE/B,aAAa,CAAC;MAC/D;IACF,CAAC,CAAC;IACF;EAAA;IAAAnB,GAAA;IAAAlB,KAAA,EAGA,SAAAqG,0BAAA,EAA4B;MAAA,IAAA+D,MAAA;MAC1B,IAAI,CAACrH,OAAO,CAACyF,cAAc,CAACjE,OAAO,CAAC,UAAC8F,CAAC,EAAE5F,CAAC,EAAK;QAC5C,IAAM6F,SAAS,GAAGF,MAAI,CAAChC,YAAY,CAAC3D,CAAC,CAAC;QAEtC,IAAI4F,CAAC,EAAE;UACLD,MAAI,CAAClD,gBAAgB,CAACkD,MAAI,CAACvH,KAAK,CAACyH,SAAS,CAAC,CAAClG,OAAO,EAAE/B,aAAa,CAAC;UACnE+H,MAAI,CAAClD,gBAAgB,CAACkD,MAAI,CAACvH,KAAK,CAACyH,SAAS,CAAC,CAAClG,OAAO,EAAE,eAAe,EAAE,IAAI,CAAC;QAC7E,CAAC,MAAM;UACLgG,MAAI,CAAClF,mBAAmB,CAACkF,MAAI,CAACvH,KAAK,CAACyH,SAAS,CAAC,CAAClG,OAAO,EAAE/B,aAAa,CAAC;UACtE+H,MAAI,CAAClD,gBAAgB,CAACkD,MAAI,CAACvH,KAAK,CAACyH,SAAS,CAAC,CAAClG,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC;QAC9E;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF;EAAA;IAAAlD,GAAA;IAAAlB,KAAA,EAGA,SAAAuK,aAAaC,KAAK,EAAE;MAAA,IAAAC,MAAA;MAClB,IAAIC,CAAC,GAAGhE,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;MACjF,IAAI,CAAC3D,OAAO,CAACyH,KAAK,CAAC,GAAGE,CAAC;MACvB,IAAI,CAACrC,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAACxB,kBAAkB,CAAC,UAAAuC,CAAC,EAAI;QAC3BqB,MAAI,CAAC7H,KAAK,CAAC,CAAC,CAAC,CAACwB,OAAO,CAACgF,CAAC,CAAC,GAAGqB,MAAI,CAAC1H,OAAO,CAACqG,CAAC,CAAC;QAC1CqB,MAAI,CAAC7H,KAAK,CAAC,CAAC,CAAC,CAACwB,OAAO,CAACgF,CAAC,CAAC,GAAGqB,MAAI,CAAC1H,OAAO,CAACqG,CAAC,CAAC;MAC5C,CAAC,CAAC;MACF,IAAI,CAACvF,aAAa,GAAG,IAAI,CAACd,OAAO,CAACgD,GAAG,GAAG,IAAI,CAAChD,OAAO,CAACiD,GAAG;MACxD,IAAI,CAACE,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC;MACvB,IAAI,CAACC,iBAAiB,CAAC,CAAC;IAC1B,CAAC,CAAC;IACF;IACA;EAAA;IAAAjF,GAAA;IAAAlB,KAAA,EAGA,SAAAiG,kBAAA,EAAoB;MAClB,IAAI,IAAI,CAAClD,OAAO,CAACoF,WAAW,KAAKpG,QAAQ,EAAE;QACzC,IAAI,CAACmF,gBAAgB,CAAC,IAAI,CAACxE,OAAO,CAAC0B,OAAO,EAAEhC,aAAa,CAAC;MAC5D,CAAC,MAAM;QACL,IAAI,CAAC8C,mBAAmB,CAAC,IAAI,CAACxC,OAAO,CAAC0B,OAAO,EAAEhC,aAAa,CAAC;MAC/D;MAEA,IAAI,CAACU,KAAK,CAACsB,OAAO,CAACkF,KAAK,CAAC,IAAI,CAACtB,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,GAAG,EAAE;MACjE,IAAI,CAAClF,KAAK,CAACsB,OAAO,CAACkF,KAAK,CAAC,IAAI,CAACtB,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE;MACrE,IAAI,CAACnF,KAAK,CAAC,CAAC,CAAC,CAACuB,OAAO,CAACkF,KAAK,CAAC,IAAI,CAACtB,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,GAAG,EAAE;MACpE,IAAI,CAACnF,KAAK,CAAC,CAAC,CAAC,CAACuB,OAAO,CAACkF,KAAK,CAAC,IAAI,CAACtB,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,GAAG,EAAE;IACtE,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;EAAA;IAAA9G,GAAA;IAAAlB,KAAA,EAGA,SAAAsF,oBAAA,EAAsB;MAAA,IAAAqF,OAAA;MACpB,IAAI,CAAC9D,kBAAkB,CAAC,UAAAuC,CAAC,EAAI;QAC3BuB,OAAI,CAAClH,UAAU,CAAC2F,CAAC,CAAC,GAAG1H,KAAK,CAACgE,MAAM,CAACkF,gBAAgB,CAACD,OAAI,CAAC9H,KAAK,CAAC8H,OAAI,CAACnH,KAAK,CAAC4F,CAAC,CAAC,CAAC,CAAChF,OAAO,CAAC,CAACyG,KAAK,CAAC;QAC5FF,OAAI,CAACjH,WAAW,CAAC0F,CAAC,CAAC,GAAG1H,KAAK,CAACgE,MAAM,CAACkF,gBAAgB,CAACD,OAAI,CAAC9H,KAAK,CAAC8H,OAAI,CAACnH,KAAK,CAAC4F,CAAC,CAAC,CAAC,CAAChF,OAAO,CAAC,CAAC0G,MAAM,CAAC;MAChG,CAAC,CAAC;IACJ,CAAC,CAAC;EAAA;IAAA5J,GAAA;IAAAlB,KAAA,EAGF,SAAA+K,gBAAgB1G,CAAC,EAAE8C,IAAI,EAAE;MACvB,IAAMqC,aAAa,GAAG,IAAI,CAAC9G,OAAO,CAAC0B,OAAO,CAACqF,qBAAqB,CAAC,CAAC;MAClE,IAAMuB,UAAU,GAAG7D,IAAI,CAACsC,qBAAqB,CAAC,CAAC;MAC/C,IAAMwB,OAAO,GAAG,CAAC,IAAI,CAACjD,cAAc,CAACgD,UAAU,CAACpB,GAAG,GAAGJ,aAAa,CAACI,GAAG,EAAEoB,UAAU,CAAClB,IAAI,GAAGN,aAAa,CAACM,IAAI,CAAC,IAAIzF,CAAC,CAAC,QAAQ,CAACkF,MAAM,CAAC,IAAI,CAACvB,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAGb,IAAI,CAACsC,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAACzB,cAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAChE,SAAS,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAChE,KAAK,CAAC,IAAI,CAACgE,SAAS,CAAC,GAAG,IAAI,CAACjB,OAAO,CAACiD,GAAG,IAAI,IAAI,CAACnC,aAAa,IAAI,IAAI,CAACmE,cAAc,CAAC,IAAI,CAACtE,WAAW,EAAE,IAAI,CAACD,UAAU,CAAC,CAAC,IAAI,CAACO,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACgE,cAAc,CAACwB,aAAa,CAACG,MAAM,GAAGH,aAAa,CAACI,GAAG,EAAEJ,aAAa,CAACK,KAAK,GAAGL,aAAa,CAACM,IAAI,CAAC,GAAG,IAAI,CAACjG,aAAa,GAAG,IAAI,CAACd,OAAO,CAACiD,GAAG;MAEziB,IAAIiF,OAAO,GAAG,IAAI,CAAClI,OAAO,CAACiD,GAAG,EAAE;QAC9B,OAAO,IAAI,CAACjD,OAAO,CAACiD,GAAG;MACzB;MAEA,IAAIiF,OAAO,GAAG,IAAI,CAAClI,OAAO,CAACgD,GAAG,EAAE;QAC9B,OAAO,IAAI,CAAChD,OAAO,CAACgD,GAAG;MACzB;MAEA,OAAOkF,OAAO;IAChB;EAAC;IAAA/J,GAAA;IAAAlB,KAAA,EAED,SAAAkL,oBAAoB7G,CAAC,EAAE8G,SAAS,EAAE;MAChC,OAAO,CAAC9G,CAAC,CAAC+G,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACH,SAAS,CAAC;IAChD;EAAC;IAAAjK,GAAA;IAAAlB,KAAA,EAED,SAAAsE,eAAeD,CAAC,EAAE;MAChB,IAAIkH,MAAM,GAAG7E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;MACrF,IAAI8E,QAAQ,GAAG,KAAK;MAEpB,IAAI,CAAC,IAAI,CAACzI,OAAO,CAACmH,QAAQ,KAAK,IAAI,CAACgB,mBAAmB,CAAC7G,CAAC,EAAE,qBAAqB,CAAC,IAAI,IAAI,CAAC6G,mBAAmB,CAAC7G,CAAC,EAAE,qBAAqB,CAAC,IAAI,IAAI,CAACtB,OAAO,CAAC0I,kBAAkB,IAAI,IAAI,CAACP,mBAAmB,CAAC7G,CAAC,EAAE,qBAAqB,CAAC,CAAC,EAAE;QACjOmH,QAAQ,GAAG,IAAI;MACjB,CAAC,CAAC;;MAGF,IAAIA,QAAQ,IAAI,IAAI,CAACzI,OAAO,CAACyF,cAAc,CAAC,CAAC,CAAC,IAAI,IAAI,CAACzF,OAAO,CAACyF,cAAc,CAAC,CAAC,CAAC,EAAE;QAChFgD,QAAQ,GAAG,KAAK;MAClB;MAEA,IAAIA,QAAQ,EAAE;QACZ,IAAMP,OAAO,GAAG,IAAI,CAACF,eAAe,CAAC1G,CAAC,EAAE,IAAI,CAACvB,KAAK,CAACsB,OAAO,CAAC;QAC3D,IAAMsH,QAAQ,GAAGlK,GAAG,CAAC,IAAI,CAACxB,KAAK,CAACgG,GAAG,GAAGiF,OAAO,CAAC;QAC9C,IAAMU,QAAQ,GAAGnK,GAAG,CAAC,IAAI,CAACxB,KAAK,CAAC+F,GAAG,GAAGkF,OAAO,CAAC;QAE9C,IAAI,IAAI,CAAClI,OAAO,CAACyF,cAAc,CAAC,CAAC,CAAC,EAAE;UAClC,IAAIyC,OAAO,IAAI,IAAI,CAACjL,KAAK,CAACgG,GAAG,EAAE;YAC7B,IAAI,CAACE,QAAQ,CAAC,IAAI,CAAC3C,cAAc,CAAC,IAAI,CAACvD,KAAK,CAACgG,GAAG,EAAEiF,OAAO,CAAC,EAAE,IAAI,EAAE,CAACM,MAAM,CAAC;YAC1E,IAAI,CAAC7G,iBAAiB,CAACL,CAAC,EAAE,IAAI,CAACb,KAAK,CAACuC,GAAG,EAAE,IAAI,CAAClD,KAAK,CAAC,IAAI,CAACW,KAAK,CAACuC,GAAG,CAAC,CAAC3B,OAAO,EAAE,CAACmH,MAAM,CAAC;UACxF;QACF,CAAC,MAAM,IAAI,IAAI,CAACxI,OAAO,CAACyF,cAAc,CAAC,CAAC,CAAC,EAAE;UACzC,IAAIyC,OAAO,IAAI,IAAI,CAACjL,KAAK,CAAC+F,GAAG,EAAE;YAC7B,IAAI,CAACG,QAAQ,CAAC,IAAI,CAAC3C,cAAc,CAAC0H,OAAO,EAAE,IAAI,CAACjL,KAAK,CAAC+F,GAAG,CAAC,EAAE,IAAI,EAAE,CAACwF,MAAM,CAAC;YAC1E,IAAI,CAAC7G,iBAAiB,CAACL,CAAC,EAAE,IAAI,CAACb,KAAK,CAACwC,GAAG,EAAE,IAAI,CAACnD,KAAK,CAAC,IAAI,CAACW,KAAK,CAACwC,GAAG,CAAC,CAAC5B,OAAO,EAAE,CAACmH,MAAM,CAAC;UACxF;QACF,CAAC,MAAM;UACL,IAAIK,iBAAiB,GAAG,IAAI,CAACpI,KAAK,CAACuC,GAAG;UAEtC,IAAI2F,QAAQ,KAAKC,QAAQ,EAAE;YACzB,IAAI,CAACzF,QAAQ,CAAC,IAAI,CAAC3C,cAAc,CAAC,IAAI,CAACvD,KAAK,CAACgG,GAAG,EAAEiF,OAAO,CAAC,EAAE,IAAI,EAAE,CAACM,MAAM,CAAC;UAC5E,CAAC,MAAM;YACL,IAAI,CAACrF,QAAQ,CAAC,IAAI,CAAC3C,cAAc,CAACmI,QAAQ,GAAGC,QAAQ,GAAGV,OAAO,GAAG,IAAI,CAACjL,KAAK,CAACgG,GAAG,EAAE2F,QAAQ,GAAGD,QAAQ,GAAGT,OAAO,GAAG,IAAI,CAACjL,KAAK,CAAC+F,GAAG,CAAC,EAAE,IAAI,EAAE,CAACwF,MAAM,CAAC;YACjJK,iBAAiB,GAAGF,QAAQ,GAAGC,QAAQ,GAAG,IAAI,CAACnI,KAAK,CAACwC,GAAG,GAAG,IAAI,CAACxC,KAAK,CAACuC,GAAG;UAC3E;UAEA,IAAI,CAACrB,iBAAiB,CAACL,CAAC,EAAEuH,iBAAiB,EAAE,IAAI,CAAC/I,KAAK,CAAC+I,iBAAiB,CAAC,CAACxH,OAAO,EAAE,CAACmH,MAAM,CAAC;QAC9F;QAEA,IAAIA,MAAM,EAAE;UACV,IAAI,CAACjH,cAAc,CAACD,CAAC,EAAE,KAAK,CAAC;QAC/B;MACF;IACF;EAAC;IAAAnD,GAAA;IAAAlB,KAAA,EAED,SAAA6L,aAAaxH,CAAC,EAAE8C,IAAI,EAAE;MACpB,IAAI,CAAC7B,mBAAmB,CAAC,CAAC;MAC1B,IAAI,CAAC4B,gBAAgB,CAACC,IAAI,EAAEhF,WAAW,CAAC;MACxC,IAAI,CAAC8B,QAAQ,GAAG,IAAI,CAAC8G,eAAe,CAAC1G,CAAC,EAAE8C,IAAI,CAAC;MAC7C,IAAI,CAACpD,UAAU,GAAG,IAAI;IACxB;EAAC;IAAA7C,GAAA;IAAAlB,KAAA,EAED,SAAA0E,kBAAkBL,CAAC,EAAEI,CAAC,EAAE0C,IAAI,EAAE;MAC5B,IAAI0B,QAAQ,GAAGnC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;MAEvF,IAAI,CAAC,IAAI,CAAC3D,OAAO,CAACmH,QAAQ,IAAI,CAAC,IAAI,CAACnH,OAAO,CAACyF,cAAc,CAAC,IAAI,CAACJ,YAAY,CAAC3D,CAAC,CAAC,CAAC,EAAE;QAChF,IAAI,CAACoH,YAAY,CAACxH,CAAC,EAAE8C,IAAI,CAAC;QAC1B,IAAI,CAACnD,SAAS,GAAG,IAAI,CAACR,KAAK,CAACwC,GAAG,KAAKvB,CAAC,GAAG7C,GAAG,GAAGC,GAAG;QAEjD,IAAIgH,QAAQ,IAAI,IAAI,CAAC9F,OAAO,CAAC+I,gBAAgB,EAAE;UAC7C,IAAI,CAAC/I,OAAO,CAAC+I,gBAAgB,CAAC,CAAC;QACjC;MACF;IACF;EAAC;IAAA5K,GAAA;IAAAlB,KAAA,EAED,SAAA8E,kBAAkBT,CAAC,EAAE;MACnB,IAAI,CAAC,IAAI,CAACtB,OAAO,CAACmH,QAAQ,IAAI,CAAC,IAAI,CAACnH,OAAO,CAAC0I,kBAAkB,EAAE;QAC9D,IAAI,CAACI,YAAY,CAACxH,CAAC,EAAE,IAAI,CAACvB,KAAK,CAACsB,OAAO,CAAC;QACxC,IAAI,CAACN,UAAU,GAAG,IAAI,CAAC9D,KAAK,CAAC+F,GAAG,GAAG,IAAI,CAAC/F,KAAK,CAACgG,GAAG;QACjD,IAAI,CAAChC,SAAS,GAAG,KAAK;QAEtB,IAAI,IAAI,CAACjB,OAAO,CAACgJ,gBAAgB,EAAE;UACjC,IAAI,CAAChJ,OAAO,CAACgJ,gBAAgB,CAAC,CAAC;QACjC;MACF;IACF;EAAC;IAAA7K,GAAA;IAAAlB,KAAA,EAED,SAAAgF,KAAKX,CAAC,EAAE;MACN,IAAI,IAAI,CAACN,UAAU,EAAE;QACnB,IAAMiI,OAAO,GAAG,IAAI,CAACjB,eAAe,CAAC1G,CAAC,EAAE,IAAI,CAACvB,KAAK,CAACsB,OAAO,CAAC;QAC3D,IAAM6H,KAAK,GAAGD,OAAO,GAAG,IAAI,CAAC/H,QAAQ;QACrC,IAAI+B,GAAG,GAAG,IAAI,CAAChG,KAAK,CAACgG,GAAG;QACxB,IAAID,GAAG,GAAG,IAAI,CAAC/F,KAAK,CAAC+F,GAAG;QACxB,IAAMmG,KAAK,GAAG,IAAI,CAAClI,SAAS,GAAG,IAAI,CAACL,WAAW,CAACqC,GAAG,GAAG,IAAI,CAACjD,OAAO,CAACiD,GAAG;QACtE,IAAMmG,KAAK,GAAG,IAAI,CAACnI,SAAS,GAAG,IAAI,CAACL,WAAW,CAACoC,GAAG,GAAG,IAAI,CAAChD,OAAO,CAACgD,GAAG;QAEtE,IAAI,CAAC,IAAI,CAAC/B,SAAS,IAAI,IAAI,CAACA,SAAS,KAAKpC,GAAG,EAAE;UAC7CoE,GAAG,GAAG,IAAI,CAAChC,SAAS,GAAGgI,OAAO,GAAG,IAAI,CAACpI,WAAW,CAACoC,GAAG,GAAGiG,KAAK;QAC/D;QAEA,IAAI,CAAC,IAAI,CAACjI,SAAS,IAAI,IAAI,CAACA,SAAS,KAAKnC,GAAG,EAAE;UAC7CkE,GAAG,GAAG,IAAI,CAAC/B,SAAS,GAAGgI,OAAO,GAAG,IAAI,CAACpI,WAAW,CAACmC,GAAG,GAAGkG,KAAK;QAC/D;QAEA,IAAIjG,GAAG,IAAIkG,KAAK,IAAIlG,GAAG,IAAImG,KAAK,IAAIpG,GAAG,IAAImG,KAAK,IAAInG,GAAG,IAAIoG,KAAK,EAAE;UAChE,IAAI,CAACjG,QAAQ,CAAC;YACZF,GAAG,EAAHA,GAAG;YACHD,GAAG,EAAHA;UACF,CAAC,CAAC;UACF,IAAI,CAAC9B,QAAQ,GAAG+H,OAAO;QACzB,CAAC,MAAM;UACL;UACA,IAAIhG,GAAG,GAAGmG,KAAK,IAAI,IAAI,CAACnI,SAAS,EAAE;YACjC,IAAI,CAACkC,QAAQ,CAAC,IAAI,CAAC3C,cAAc,CAAC4I,KAAK,EAAEA,KAAK,CAAC,CAAC;YAChD,IAAI,CAAClI,QAAQ,GAAG+H,OAAO;UACzB,CAAC,CAAC;;UAGF,IAAIjG,GAAG,GAAGmG,KAAK,IAAI,IAAI,CAAClI,SAAS,EAAE;YACjC,IAAI,CAACkC,QAAQ,CAAC,IAAI,CAAC3C,cAAc,CAAC2I,KAAK,EAAEA,KAAK,CAAC,CAAC;YAChD,IAAI,CAACjI,QAAQ,GAAG+H,OAAO;UACzB,CAAC,CAAC;;UAGF,IAAIhG,GAAG,GAAGkG,KAAK,EAAE;YACf,IAAI,CAAC,IAAI,CAAClI,SAAS,EAAE;cACnB,IAAI,CAACkC,QAAQ,CAAC,IAAI,CAAC3C,cAAc,CAAC2I,KAAK,EAAE,IAAI,CAAClM,KAAK,CAAC+F,GAAG,GAAG,IAAI,CAAC/F,KAAK,CAACgG,GAAG,GAAGkG,KAAK,CAAC,CAAC;YACpF,CAAC,MAAM;cACL,IAAI,CAAChG,QAAQ,CAAC,IAAI,CAAC3C,cAAc,CAAC2I,KAAK,EAAE,IAAI,CAAClM,KAAK,CAAC+F,GAAG,CAAC,CAAC;YAC3D;YAEA,IAAI,CAAC9B,QAAQ,GAAG+H,OAAO;UACzB,CAAC,CAAC;;UAGF,IAAIjG,GAAG,GAAGoG,KAAK,EAAE;YACf,IAAI,CAAC,IAAI,CAACnI,SAAS,EAAE;cACnB,IAAI,CAACkC,QAAQ,CAAC,IAAI,CAAC3C,cAAc,CAAC,IAAI,CAACvD,KAAK,CAACgG,GAAG,GAAG,IAAI,CAAChG,KAAK,CAAC+F,GAAG,GAAGoG,KAAK,EAAEA,KAAK,CAAC,CAAC;YACpF,CAAC,MAAM;cACL,IAAI,CAACjG,QAAQ,CAAC,IAAI,CAAC3C,cAAc,CAAC,IAAI,CAACvD,KAAK,CAACgG,GAAG,EAAEmG,KAAK,CAAC,CAAC;YAC3D;YAEA,IAAI,CAAClI,QAAQ,GAAG+H,OAAO;UACzB;QACF;QAEA,IAAI,CAAC,IAAI,CAAChI,SAAS,EAAE;UACnB,IAAI,CAACmC,iBAAiB,CAAC,CAAC;QAC1B;MACF;IACF;EAAC;IAAAjF,GAAA;IAAAlB,KAAA,EAED,SAAAoM,gBAAA,EAAkB;MAChB,IAAMC,IAAI,GAAG3K,KAAK,CAAC,IAAI,CAACkB,KAAK,CAAC,CAAC,CAAC,CAACwB,OAAO,CAACiI,IAAI,CAAC;MAC9C,OAAO,IAAI,CAACzJ,KAAK,CAAC,CAAC,CAAC,CAACwB,OAAO,CAACiI,IAAI,KAAKvK,GAAG,GAAGA,GAAG,GAAGuK,IAAI,KAAK,CAAC,IAAI5F,KAAK,CAAC4F,IAAI,CAAC,GAAG,CAAC,GAAGA,IAAI;IACxF,CAAC,CAAC;EAAA;IAAAnL,GAAA;IAAAlB,KAAA,EAGF,SAAA6E,UAAUJ,CAAC,EAAEvD,GAAG,EAAE;MAChB,IAAMoL,SAAS,GAAG,CAACpL,GAAG,KAAK,EAAE,IAAIA,GAAG,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC8G,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAElF,IAAI,CAAC,IAAI,CAACjF,OAAO,CAACmH,QAAQ,IAAI,CAAC,IAAI,CAACnH,OAAO,CAACyF,cAAc,CAAC,IAAI,CAACJ,YAAY,CAAC3D,CAAC,CAAC,CAAC,EAAE;QAChF,IAAI4H,IAAI,GAAG,IAAI,CAACD,eAAe,CAAC,CAAC;QACjCC,IAAI,GAAGA,IAAI,KAAKvK,GAAG,GAAG,CAAC,GAAGuK,IAAI;QAC9B,IAAIrG,GAAG,GAAG,IAAI,CAAChG,KAAK,CAACgG,GAAG,GAAGqG,IAAI,IAAI,IAAI,CAAC7I,KAAK,CAACwC,GAAG,KAAKvB,CAAC,GAAG6H,SAAS,GAAG,CAAC,CAAC;QACxE,IAAIvG,GAAG,GAAG,IAAI,CAAC/F,KAAK,CAAC+F,GAAG,GAAGsG,IAAI,IAAI,IAAI,CAAC7I,KAAK,CAACuC,GAAG,KAAKtB,CAAC,GAAG6H,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;;QAE1E,IAAItG,GAAG,GAAG,IAAI,CAACrC,WAAW,CAACoC,GAAG,EAAE;UAC9BC,GAAG,GAAG,IAAI,CAACrC,WAAW,CAACoC,GAAG;QAC5B,CAAC,CAAC;;QAGF,IAAIA,GAAG,GAAG,IAAI,CAACpC,WAAW,CAACqC,GAAG,EAAE;UAC9BD,GAAG,GAAG,IAAI,CAACpC,WAAW,CAACqC,GAAG;QAC5B;QAEA,IAAI,CAACE,QAAQ,CAAC;UACZF,GAAG,EAAHA,GAAG;UACHD,GAAG,EAAHA;QACF,CAAC,EAAE,IAAI,CAAC;MACV;IACF;EAAC;IAAA7E,GAAA;IAAAlB,KAAA,EAED,SAAAuM,OAAA,EAAS;MACP;MACA,IAAI,CAAC1E,iBAAiB,CAAC,oBAAoB,EAAE,KAAK,CAAC;MACnD,IAAI,CAACA,iBAAiB,CAAC,gBAAgB,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;MACxD,IAAI,CAACA,iBAAiB,CAAC,aAAa,EAAE,YAAY,CAAC;MACnD,IAAI,CAACA,iBAAiB,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;MAChD,IAAI,CAACA,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC;MACzC,IAAI,CAACA,iBAAiB,CAAC,kBAAkB,EAAE,KAAK,CAAC;MACjD,IAAI,CAACA,iBAAiB,CAAC,kBAAkB,EAAE,KAAK,CAAC;MACjD,IAAI,CAACA,iBAAiB,CAAC,gBAAgB,EAAE,KAAK,CAAC;MAC/C,IAAI,CAACA,iBAAiB,CAAC,gBAAgB,EAAE,KAAK,CAAC;MAC/C,IAAI,CAACA,iBAAiB,CAAC,SAAS,EAAE,KAAK,CAAC;MACxC,IAAI,CAACA,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC;MACjC,IAAI,CAACA,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC;MAChC,IAAI,CAACA,iBAAiB,CAAC,KAAK,EAAE,GAAG,CAAC;MAElC,IAAI,IAAI,CAAC/B,KAAK,CAAC9F,KAAK,EAAE;QACpB,IAAI,CAAC6H,iBAAiB,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;MAC3C;MAEA,IAAI,CAACQ,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAACE,wBAAwB,CAAC,CAAC;MAC/B,OAAO,aAAatI,MAAM,CAACR,OAAO,CAAC+M,aAAa,CAAC,KAAK,EAAE;QACtD,aAAa,EAAE,SAAS;QACxBC,EAAE,EAAE,IAAI,CAAC3G,KAAK,CAAC2G,EAAE;QACjBC,GAAG,EAAE,IAAI,CAAChK,OAAO;QACjByI,SAAS,EAAE,CAAC,CAAC,EAAEhL,KAAK,CAACV,OAAO,EAAE,cAAc,EAAE,IAAI,CAACqG,KAAK,CAACqF,SAAS;MACpE,CAAC,EAAE,aAAalL,MAAM,CAACR,OAAO,CAAC+M,aAAa,CAAC,OAAO,EAAE;QACpDE,GAAG,EAAE,IAAI,CAAC9J,KAAK,CAAC,CAAC,CAAC;QAClB+J,IAAI,EAAE,OAAO;QACb3G,GAAG,EAAE,IAAI,CAACjD,OAAO,CAACiD,GAAG;QACrBD,GAAG,EAAE,IAAI,CAAChD,OAAO,CAACgD,GAAG;QACrBsG,IAAI,EAAE,IAAI,CAACtJ,OAAO,CAACsJ,IAAI;QACvBrM,KAAK,EAAE,IAAI,CAAC8F,KAAK,CAAC9F,KAAK,GAAG,IAAI,CAAC+C,OAAO,CAAC/C,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACmD,kBAAkB,GAAG,IAAI,CAACnD,KAAK,CAACgG,GAAG,GAAG,IAAI,CAACjD,OAAO,CAACgF,YAAY,CAAC,CAAC,CAAC;QACzH6E,QAAQ,EAAE,SAAAA,SAAA,EAAM,CAAC,CAAC;QAClB1C,QAAQ,EAAE;MACZ,CAAC,CAAC,EAAE,aAAajK,MAAM,CAACR,OAAO,CAAC+M,aAAa,CAAC,OAAO,EAAE;QACrDE,GAAG,EAAE,IAAI,CAAC9J,KAAK,CAAC,CAAC,CAAC;QAClB+J,IAAI,EAAE,OAAO;QACb3G,GAAG,EAAE,IAAI,CAACjD,OAAO,CAACiD,GAAG;QACrBD,GAAG,EAAE,IAAI,CAAChD,OAAO,CAACgD,GAAG;QACrBsG,IAAI,EAAE,IAAI,CAACtJ,OAAO,CAACsJ,IAAI;QACvBrM,KAAK,EAAE,IAAI,CAAC8F,KAAK,CAAC9F,KAAK,GAAG,IAAI,CAAC+C,OAAO,CAAC/C,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACmD,kBAAkB,GAAG,IAAI,CAACnD,KAAK,CAAC+F,GAAG,GAAG,IAAI,CAAChD,OAAO,CAACgF,YAAY,CAAC,CAAC,CAAC;QACzH6E,QAAQ,EAAE,SAAAA,SAAA,EAAM,CAAC,CAAC;QAClB1C,QAAQ,EAAE;MACZ,CAAC,CAAC,EAAE,aAAajK,MAAM,CAACR,OAAO,CAAC+M,aAAa,CAAC,KAAK,EAAE;QACnDE,GAAG,EAAE,IAAI,CAAC7J,KAAK,CAAC,CAAC,CAAC;QAClBgK,IAAI,EAAE,QAAQ;QACd1B,SAAS,EAAE,qBAAqB;QAChC,YAAY,EAAE;MAChB,CAAC,CAAC,EAAE,aAAalL,MAAM,CAACR,OAAO,CAAC+M,aAAa,CAAC,KAAK,EAAE;QACnDE,GAAG,EAAE,IAAI,CAAC7J,KAAK,CAAC,CAAC,CAAC;QAClBgK,IAAI,EAAE,QAAQ;QACd1B,SAAS,EAAE,qBAAqB;QAChC,YAAY,EAAE;MAChB,CAAC,CAAC,EAAE,aAAalL,MAAM,CAACR,OAAO,CAAC+M,aAAa,CAAC,KAAK,EAAE;QACnDE,GAAG,EAAE,IAAI,CAAC5J,KAAK;QACfqI,SAAS,EAAE;MACb,CAAC,CAAC,CAAC;IACL;EAAC;EAAA,OAAA7I,WAAA;AAAA,EAnqBuBrC,MAAM,CAAC6M,aAAa;AAuqB9C;AACA,IAAIC,QAAQ,GAAGzK,WAAW;AAC1BvC,OAAO,CAACN,OAAO,GAAGsN,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}